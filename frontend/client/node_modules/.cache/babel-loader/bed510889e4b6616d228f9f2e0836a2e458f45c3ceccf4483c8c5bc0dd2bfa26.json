{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Manuela\\\\Documents\\\\TERCER A\\xD1O INGENIERIA\\\\final arqsw2 2\\\\UCC-as2-final\\\\frontend\\\\client\\\\src\\\\pages\\\\login\\\\Register_cliente.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../estilo/Register_cliente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction goTo(path) {\n  setTimeout(() => {\n    window.location = window.location.origin + path;\n  }, 0);\n}\nfunction RegistrationPage() {\n  _s();\n  const [clienteEmail, setClienteEmail] = useState({});\n  const [clienteUsername, setClienteUsername] = useState({});\n  const [error, setError] = useState(\"\");\n  const [formData, setFormData] = useState({\n    name: \"\",\n    last_name: \"\",\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const Register = event => {\n    event.preventDefault();\n    fetch('http://localhost/user-res-api/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    }).then(response => {\n      console.log(response);\n      if (response.status === 400) {\n        alert('Se a ingresado un nombre de usuario o un email que ya se encuentra registrado.');\n      }\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Error en el registro');\n      }\n    }).then(data => {\n      // Maneja la respuesta JSON aquí si es necesario\n      console.log('Datos de respuesta:', data);\n      goTo('/login-cliente');\n    }).catch(error => {\n      console.error('Error en el registro:', error);\n      alert('Credenciales incorrectas');\n    });\n  };\n\n  /*function RegistrationPage() {\r\n    const [clienteEmail, setClienteEmail] = useState(\"\");\r\n    const [clienteUsername, setClienteUsername] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n      name: \"\",\r\n      last_name: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\"\r\n    });\r\n    const [error, setError] = useState(\"\");\r\n  \r\n    const handleChange = (e) => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n  \r\n    const handleRegister = async () => {\r\n      try {\r\n        // Comprobar disponibilidad de email\r\n        const responseEmail = await fetch(`http://localhost:8070/user?email=${formData.email}`);\r\n        if (responseEmail.ok) {\r\n          const dataEmail = await responseEmail.json();\r\n          setClienteEmail(dataEmail.email);\r\n        }\r\n  \r\n        // Comprobar disponibilidad de username\r\n        const responseUsername = await fetch(`http://localhost:8070/user?username=${formData.username}`);\r\n        if (responseUsername.ok) {\r\n          const dataUsername = await responseUsername.json();\r\n          setClienteUsername(dataUsername.username);\r\n        }\r\n  \r\n        // Realizar registro si no hay conflictos\r\n        if (formData.email === clienteEmail && formData.username === clienteUsername) {\r\n          setError('El email y el username ya están en uso');\r\n        } else if (formData.email === clienteEmail) {\r\n          setError('El email ya pertenece a una cuenta');\r\n        } else if (formData.username === clienteUsername) {\r\n          setError('El username no está disponible');\r\n        } else {\r\n          const response = await fetch('http://localhost:8070/user', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formData)\r\n          });\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Registro exitoso:', data);\r\n            window.location = '/login-cliente';\r\n          } else {\r\n            throw new Error('Error en el registro');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error en el registro:', error);\r\n        setError('Credenciales incorrectas');\r\n      }\r\n    };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Register,\n      className: \"registration-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Apellido:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"last_name\",\n          value: formData.last_name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Nombre de usuario:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Contrase\\xF1a:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrarse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationPage, \"zuIRjUL3wWhZt4OsQKw+jActZ2Y=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","goTo","path","setTimeout","window","location","origin","RegistrationPage","_s","clienteEmail","setClienteEmail","clienteUsername","setClienteUsername","error","setError","formData","setFormData","name","last_name","username","password","email","handleChange","e","target","value","Register","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","console","log","status","alert","ok","json","Error","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Manuela/Documents/TERCER AÑO INGENIERIA/final arqsw2 2/UCC-as2-final/frontend/client/src/pages/login/Register_cliente.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../estilo/Register_cliente.css';\r\n\r\nfunction goTo(path){\r\n  setTimeout(() => {\r\n      window.location = window.location.origin + path;\r\n  }, 0)\r\n}\r\n\r\nfunction RegistrationPage() {\r\n  const [clienteEmail, setClienteEmail] = useState({});\r\n  const [clienteUsername, setClienteUsername] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    last_name: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const Register = (event) => {\r\n    event.preventDefault();\r\n\r\n    fetch('http://localhost/user-res-api/user', {\r\n    method: 'POST',\r\n    headers: {\r\n    'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(formData)\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      if (response.status === 400)\r\n      {\r\n        alert('Se a ingresado un nombre de usuario o un email que ya se encuentra registrado.');\r\n      }\r\n      if (response.ok) {\r\n        return response.json();\r\n      } else {\r\n        throw new Error('Error en el registro');\r\n      }\r\n    })\r\n    .then(data => {\r\n      // Maneja la respuesta JSON aquí si es necesario\r\n      console.log('Datos de respuesta:', data);\r\n      goTo('/login-cliente');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error en el registro:', error);\r\n      alert('Credenciales incorrectas');\r\n    });\r\n  };\r\n\r\n  /*function RegistrationPage() {\r\n    const [clienteEmail, setClienteEmail] = useState(\"\");\r\n    const [clienteUsername, setClienteUsername] = useState(\"\");\r\n    const [formData, setFormData] = useState({\r\n      name: \"\",\r\n      last_name: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      email: \"\"\r\n    });\r\n    const [error, setError] = useState(\"\");\r\n  \r\n    const handleChange = (e) => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n  \r\n    const handleRegister = async () => {\r\n      try {\r\n        // Comprobar disponibilidad de email\r\n        const responseEmail = await fetch(`http://localhost:8070/user?email=${formData.email}`);\r\n        if (responseEmail.ok) {\r\n          const dataEmail = await responseEmail.json();\r\n          setClienteEmail(dataEmail.email);\r\n        }\r\n  \r\n        // Comprobar disponibilidad de username\r\n        const responseUsername = await fetch(`http://localhost:8070/user?username=${formData.username}`);\r\n        if (responseUsername.ok) {\r\n          const dataUsername = await responseUsername.json();\r\n          setClienteUsername(dataUsername.username);\r\n        }\r\n  \r\n        // Realizar registro si no hay conflictos\r\n        if (formData.email === clienteEmail && formData.username === clienteUsername) {\r\n          setError('El email y el username ya están en uso');\r\n        } else if (formData.email === clienteEmail) {\r\n          setError('El email ya pertenece a una cuenta');\r\n        } else if (formData.username === clienteUsername) {\r\n          setError('El username no está disponible');\r\n        } else {\r\n          const response = await fetch('http://localhost:8070/user', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(formData)\r\n          });\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            console.log('Registro exitoso:', data);\r\n            window.location = '/login-cliente';\r\n          } else {\r\n            throw new Error('Error en el registro');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Error en el registro:', error);\r\n        setError('Credenciales incorrectas');\r\n      }\r\n    };*/\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <h2>Registro</h2>\r\n      <form onSubmit={Register} className=\"registration-form\">\r\n        <label>\r\n          Nombre:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Apellido:\r\n          <input\r\n            type=\"text\"\r\n            name=\"last_name\"\r\n            value={formData.last_name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Nombre de usuario:\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={formData.username}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Contraseña:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <br />\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n        <button type=\"submit\">Registrarse</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}