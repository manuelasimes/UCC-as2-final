{"ast":null,"code":"var _jsxFileName = \"/Users/mateonegri/Developer/ArqSW2/UCC-as2-final/frontend/client/src/pages/login/auth.jsx\",\n  _s = $RefreshSig$();\n// auth.js\nimport React, { createContext, useState, useEffect } from 'react';\nimport Cookies from 'universal-cookie';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [auth, setAuth] = useState({\n    accessToken: null,\n    refreshToken: null,\n    userType: null\n  });\n  useEffect(() => {\n    const accessToken = new Cookies().get('accessToken');\n    const refreshToken = new Cookies().get('refreshToken');\n    if (accessToken && refreshToken) {\n      setAuth({\n        accessToken,\n        refreshToken,\n        userType: jwtDecode(accessToken).type\n      });\n    }\n  }, []);\n  const login = (accessToken, refreshToken, userType) => {\n    const cookies = new Cookies();\n    cookies.set('accessToken', accessToken, {\n      path: '/'\n    });\n    cookies.set('refreshToken', refreshToken, {\n      path: '/'\n    });\n    setAuth({\n      accessToken,\n      refreshToken,\n      userType\n    });\n\n    // Almacenar el ID del cliente o administrador en localStorage\n    localStorage.setItem('user_id', jwtDecode(accessToken).user_id);\n  };\n  const logout = () => {\n    const cookies = new Cookies();\n    cookies.remove('accessToken', {\n      path: '/'\n    });\n    cookies.remove('refreshToken', {\n      path: '/'\n    });\n    setAuth({\n      accessToken: null,\n      refreshToken: null,\n      userType: null\n    });\n\n    // Limpiar el localStorage al cerrar sesión\n    localStorage.removeItem('user_id');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"TvVfrDX52XZ0SBeB9Jb7dThE090=\");\n_c = AuthProvider;\nexport { AuthContext };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","Cookies","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","auth","setAuth","accessToken","refreshToken","userType","get","type","login","cookies","set","path","localStorage","setItem","user_id","logout","remove","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mateonegri/Developer/ArqSW2/UCC-as2-final/frontend/client/src/pages/login/auth.jsx"],"sourcesContent":["// auth.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [auth, setAuth] = useState({ accessToken: null, refreshToken: null, userType: null });\r\n\r\n    useEffect(() => {\r\n        const accessToken = new Cookies().get('accessToken');\r\n        const refreshToken = new Cookies().get('refreshToken');\r\n        if (accessToken && refreshToken) {\r\n            setAuth({ accessToken, refreshToken, userType: jwtDecode(accessToken).type });\r\n        }\r\n    }, []);\r\n\r\n    const login = (accessToken, refreshToken, userType) => {\r\n        const cookies = new Cookies();\r\n        cookies.set('accessToken', accessToken, { path: '/' });\r\n        cookies.set('refreshToken', refreshToken, { path: '/' });\r\n        setAuth({ accessToken, refreshToken, userType });\r\n        \r\n        // Almacenar el ID del cliente o administrador en localStorage\r\n        localStorage.setItem('user_id', jwtDecode(accessToken).user_id);\r\n    };\r\n\r\n    const logout = () => {\r\n        const cookies = new Cookies();\r\n        cookies.remove('accessToken', { path: '/' });\r\n        cookies.remove('refreshToken', { path: '/' });\r\n        setAuth({ accessToken: null, refreshToken: null, userType: null });\r\n\r\n        // Limpiar el localStorage al cerrar sesión\r\n        localStorage.removeItem('user_id');\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ auth, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC;IAAEY,WAAW,EAAE,IAAI;IAAEC,YAAY,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAE3Fb,SAAS,CAAC,MAAM;IACZ,MAAMW,WAAW,GAAG,IAAIV,OAAO,CAAC,CAAC,CAACa,GAAG,CAAC,aAAa,CAAC;IACpD,MAAMF,YAAY,GAAG,IAAIX,OAAO,CAAC,CAAC,CAACa,GAAG,CAAC,cAAc,CAAC;IACtD,IAAIH,WAAW,IAAIC,YAAY,EAAE;MAC7BF,OAAO,CAAC;QAAEC,WAAW;QAAEC,YAAY;QAAEC,QAAQ,EAAEX,SAAS,CAACS,WAAW,CAAC,CAACI;MAAK,CAAC,CAAC;IACjF;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAGA,CAACL,WAAW,EAAEC,YAAY,EAAEC,QAAQ,KAAK;IACnD,MAAMI,OAAO,GAAG,IAAIhB,OAAO,CAAC,CAAC;IAC7BgB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,WAAW,EAAE;MAAEQ,IAAI,EAAE;IAAI,CAAC,CAAC;IACtDF,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEN,YAAY,EAAE;MAAEO,IAAI,EAAE;IAAI,CAAC,CAAC;IACxDT,OAAO,CAAC;MAAEC,WAAW;MAAEC,YAAY;MAAEC;IAAS,CAAC,CAAC;;IAEhD;IACAO,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEnB,SAAS,CAACS,WAAW,CAAC,CAACW,OAAO,CAAC;EACnE,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACjB,MAAMN,OAAO,GAAG,IAAIhB,OAAO,CAAC,CAAC;IAC7BgB,OAAO,CAACO,MAAM,CAAC,aAAa,EAAE;MAAEL,IAAI,EAAE;IAAI,CAAC,CAAC;IAC5CF,OAAO,CAACO,MAAM,CAAC,cAAc,EAAE;MAAEL,IAAI,EAAE;IAAI,CAAC,CAAC;IAC7CT,OAAO,CAAC;MAAEC,WAAW,EAAE,IAAI;MAAEC,YAAY,EAAE,IAAI;MAAEC,QAAQ,EAAE;IAAK,CAAC,CAAC;;IAElE;IACAO,YAAY,CAACK,UAAU,CAAC,SAAS,CAAC;EACtC,CAAC;EAED,oBACIrB,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAElB,IAAI;MAAEO,KAAK;MAAEO;IAAO,CAAE;IAAAhB,QAAA,EAChDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CApCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAsCzB,SAASD,WAAW;AAAG,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}