{"ast":null,"code":"/*!\n* sweetalert2 v11.6.13\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, function () {\n  'use strict';\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n  var privateProps = {\n    awaitingPromise: new WeakMap(),\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @param {string[]} items\n   * @returns {object}\n   */\n  const prefix = items => {\n    const result = {};\n    for (const i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n    return result;\n  };\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Filter the unique values into a new array\n   *\n   * @param {Array} arr\n   * @returns {Array}\n   */\n  const uniqueArray = arr => {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | Array} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {Array}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getConfirmButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getDenyButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCancelButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    const focusableElementsWithTabindex = Array.from(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n    const otherFocusableElements = Array.from(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  // Remember state in cases where opening and handling a modal will fiddle with it.\n  const states = {\n    previousBodyPadding: null\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   */\n  const hide = elem => {\n    elem.style.display = 'none';\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml);\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    setTimeout(() => {\n      focusInput(input);\n    });\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt);\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      popup.insertBefore(getLoader(), getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? params.showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (params.currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === params.currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== params.progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @param {SweetAlert2} instance\n   * @returns {HTMLElement | null}\n   */\n  function getInput(instance) {\n    const innerParams = privateProps.innerParams.get(instance || this);\n    const domCache = privateProps.domCache.get(instance || this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (innerParams, index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      return focusableElements[index].focus();\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {function} dismissWith\n   */\n  const keydownHandler = (instance, e, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (e.isComposing || e.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      e.stopPropagation();\n    }\n\n    // ENTER\n    if (e.key === 'Enter') {\n      handleEnter(instance, e, innerParams);\n    }\n\n    // TAB\n    else if (e.key === 'Tab') {\n      handleTab(e, innerParams);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n      handleArrows(e.key);\n    }\n\n    // ESC\n    else if (e.key === 'Escape') {\n      handleEsc(e, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, e, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (e.target && instance.getInput() && e.target instanceof HTMLElement && e.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleTab = (e, innerParams) => {\n    const targetElement = e.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!e.shiftKey) {\n      setFocus(innerParams, btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(innerParams, btnIndex, -1);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   * @param {function} dismissWith\n   */\n  const handleEsc = (e, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      e.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} e\n     */\n    container.ontouchstart = e => {\n      preventTouchMove = shouldPreventTouchMove(e);\n    };\n    /**\n     * @param {TouchEvent} e\n     */\n    container.ontouchmove = e => {\n      if (preventTouchMove) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${states.previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${states.previousBodyPadding}px`;\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /*\n   * Instance method to close sweetAlert\n   */\n\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise()) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  function isAwaitingPromise() {\n    return !!privateProps.awaitingPromise.get(this);\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise()) {\n      privateProps.awaitingPromise.delete(instance);\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      instance._destroy();\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    // @ts-ignore\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      unsetWeakMaps(privateProps, instance);\n      privateProps.awaitingPromise.set(instance, true);\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert2} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hideLoading: hideLoading,\n    disableLoading: hideLoading,\n    getInput: getInput,\n    close: close,\n    isAwaitingPromise: isAwaitingPromise,\n    rejectPromise: rejectPromise,\n    handleAwaitingPromise: handleAwaitingPromise,\n    closePopup: close,\n    closeModal: close,\n    closeToast: close,\n    enableButtons: enableButtons,\n    disableButtons: disableButtons,\n    enableInput: enableInput,\n    disableInput: disableInput,\n    showValidationMessage: showValidationMessage,\n    resetValidationMessage: resetValidationMessage,\n    update: update,\n    _destroy: _destroy\n  });\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    // @ts-ignore\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isValidParameter: isValidParameter,\n    isUpdatableParameter: isUpdatableParameter,\n    isDeprecatedParameter: isDeprecatedParameter,\n    argsToParams: argsToParams,\n    getContainer: getContainer,\n    getPopup: getPopup,\n    getTitle: getTitle,\n    getHtmlContainer: getHtmlContainer,\n    getImage: getImage,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getInputLabel: getInputLabel,\n    getCloseButton: getCloseButton,\n    getActions: getActions,\n    getConfirmButton: getConfirmButton,\n    getDenyButton: getDenyButton,\n    getCancelButton: getCancelButton,\n    getLoader: getLoader,\n    getFooter: getFooter,\n    getTimerProgressBar: getTimerProgressBar,\n    getFocusableElements: getFocusableElements,\n    getValidationMessage: getValidationMessage,\n    getProgressSteps: getProgressSteps,\n    isLoading: isLoading,\n    isVisible: isVisible,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    clickCancel: clickCancel,\n    fire: fire,\n    mixin: mixin,\n    showLoading: showLoading,\n    enableLoading: showLoading,\n    getTimerLeft: getTimerLeft,\n    stopTimer: stopTimer,\n    resumeTimer: resumeTimer,\n    toggleTimer: toggleTimer,\n    increaseTimer: increaseTimer,\n    isTimerRunning: isTimerRunning,\n    bindClickHandler: bindClickHandler\n  });\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n    isRunning() {\n      return this.running;\n    }\n  }\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n  let currentInstance;\n  class SweetAlert {\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      // @ts-ignore\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        // @ts-ignore\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        // @ts-ignore\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        // @ts-ignore\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(innerParams, -1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  Object.assign(SweetAlert.prototype, instanceMethods);\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        return currentInstance[key](...arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.6.13';\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n  return Swal;\n});\nif (typeof this !== 'undefined' && this.Sweetalert2) {\n  this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2;\n}\n\"undefined\" != typeof document && function (e, t) {\n  var n = e.createElement(\"style\");\n  if (e.getElementsByTagName(\"head\")[0].appendChild(n), n.styleSheet) n.styleSheet.disabled || (n.styleSheet.cssText = t);else try {\n    n.innerHTML = t;\n  } catch (e) {\n    n.innerText = t;\n  }\n}(document, \".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:rgba(0,0,0,0) !important}.swal2-container.swal2-top-start,.swal2-container.swal2-center-start,.swal2-container.swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}.swal2-container.swal2-top,.swal2-container.swal2-center,.swal2-container.swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}.swal2-container.swal2-top-end,.swal2-container.swal2-center-end,.swal2-container.swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-start>.swal2-popup,.swal2-container.swal2-center-left>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-start>.swal2-popup,.swal2-container.swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-row>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none !important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:none}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:none}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:rgba(0,0,0,0);color:#f27474}.swal2-close:focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-input,.swal2-file,.swal2-textarea,.swal2-select,.swal2-radio,.swal2-checkbox{margin:1em 2em 3px}.swal2-input,.swal2-file,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-input.swal2-inputerror,.swal2-file.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}.swal2-input:focus,.swal2-file:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-input::placeholder,.swal2-file::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-radio,.swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-radio label,.swal2-checkbox label{margin:0 .6em;font-size:1.125em}.swal2-radio input,.swal2-checkbox input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Sweetalert2","privateProps","awaitingPromise","WeakMap","promise","innerParams","domCache","swalPrefix","prefix","items","result","i","swalClasses","iconTypes","consolePrefix","uniqueArray","arr","length","indexOf","push","capitalizeFirstLetter","str","charAt","toUpperCase","slice","warn","message","console","join","error","previousWarnOnceMessages","warnOnce","includes","warnAboutDeprecation","deprecatedParam","useInstead","callIfFunction","arg","hasToPromiseFn","toPromise","asPromise","Promise","resolve","isPromise","getContainer","document","body","querySelector","container","elementBySelector","selectorString","elementByClass","className","getPopup","popup","getIcon","icon","getIconContent","getTitle","title","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getDenyButton","deny","getInputLabel","getLoader","loader","getCancelButton","cancel","getActions","getFooter","footer","getTimerProgressBar","getCloseButton","close","focusable","getFocusableElements","focusableElementsWithTabindex","Array","from","querySelectorAll","sort","a","b","tabindexA","parseInt","getAttribute","tabindexB","otherFocusableElements","filter","el","concat","isVisible$1","isModal","hasClass","shown","isToast","toast","isLoading","hasAttribute","states","previousBodyPadding","setInnerHtml","elem","html","textContent","parser","DOMParser","parsed","parseFromString","childNodes","forEach","child","appendChild","HTMLVideoElement","HTMLAudioElement","cloneNode","classList","split","contains","removeCustomClasses","params","Object","values","showClass","remove","applyCustomClass","customClass","addClass","getInput$1","inputClass","checkbox","radio","range","input","focusInput","focus","type","val","value","toggleClass","target","condition","Boolean","isArray","add","removeClass","getDirectChildByClass","children","HTMLElement","applyNumericalStyle","property","style","removeProperty","show","display","arguments","undefined","hide","setStyle","parent","selector","toggle","offsetWidth","offsetHeight","getClientRects","allButtonsAreHidden","isScrollable","scrollHeight","clientHeight","hasCssAnimation","window","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","setTimeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarFullWidth","timerProgressBarPercent","RESTORE_FOCUS_TIMEOUT","globalState","focusPreviousActiveElement","previousActiveElement","restoreActiveElement","returnFocus","x","scrollX","y","scrollY","restoreFocusTimeout","scrollTo","isNodeEnv","sweetHTML","file","select","label","textarea","replace","resetOldContainer","oldContainer","documentElement","resetValidationMessage$1","currentInstance","resetValidationMessage","addInputChangeListeners","rangeOutput","oninput","onchange","getTarget","setupAccessibility","setAttribute","setupRTL","targetElement","direction","rtl","init","oldContainerExisted","createElement","parseHtmlToContainer","param","handleObject","jquery","handleJqueryElem","toString","animationEndEvent","testEl","transEndEventNames","WebkitAnimation","animation","prototype","hasOwnProperty","call","measureScrollbar","scrollDiv","scrollbarWidth","getBoundingClientRect","clientWidth","removeChild","renderActions","instance","showConfirmButton","showDenyButton","showCancelButton","renderButtons","loaderHtml","confirmButton","denyButton","cancelButton","renderButton","handleButtonsStyling","reverseButtons","insertBefore","buttonsStyling","styled","confirmButtonColor","backgroundColor","denyButtonColor","cancelButtonColor","button","buttonType","renderCloseButton","closeButton","closeButtonHtml","showCloseButton","closeButtonAriaLabel","renderContainer","handleBackdropParam","backdrop","handlePositionParam","position","handleGrowParam","grow","background","center","growClass","inputClasses","renderInput","get","rerender","inputContainer","setAttributes","inputAttributes","showInput","setCustomClass","renderInputType","getInputContainer","removeAttributes","attributes","attrName","name","removeAttribute","attr","setInputPlaceholder","placeholder","inputPlaceholder","setInputLabel","prependTo","inputLabel","id","labelClass","innerText","insertAdjacentElement","inputType","checkAndSetInputValue","inputValue","text","email","password","number","tel","url","rangeInput","disabled","selected","checkboxContainer","checked","getMargin","marginLeft","marginRight","initialPopupWidth","textareaResizeHandler","textareaWidth","MutationObserver","observe","attributeFilter","renderContent","htmlContainer","renderFooter","renderIcon","setContent","applyStyles","iconHtml","keys","iconType","setColor","adjustSuccessIconBackgroundColor","popupBackgroundColor","successIconParts","successIconHtml","errorIconHtml","oldContent","innerHTML","newContent","iconContent","defaultIconHtml","question","warning","info","trim","iconColor","color","borderColor","sel","content","renderImage","imageUrl","imageAlt","imageWidth","imageHeight","renderPopup","padding","addClasses$1","modal","renderProgressSteps","progressStepsContainer","progressSteps","currentProgressStep","step","index","stepEl","createStepElement","lineEl","createLineElement","progressStepsDistance","renderTitle","titleText","render","didRender","hideLoading","showRelatedButton","loading","buttonToReplace","getElementsByClassName","getInput","isVisible","clickConfirm","click","clickDeny","clickCancel","DismissReason","freeze","esc","removeKeydownHandler","keydownTarget","keydownHandlerAdded","removeEventListener","keydownHandler","capture","keydownListenerCapture","addKeydownHandler","dismissWith","e","addEventListener","setFocus","increment","focusableElements","arrowKeysNextButton","arrowKeysPreviousButton","isComposing","keyCode","stopKeydownPropagation","stopPropagation","key","handleEnter","handleTab","handleArrows","handleEsc","allowEnterKey","outerHTML","preventDefault","btnIndex","shiftKey","activeElement","sibling","buttonToFocus","HTMLButtonElement","allowEscapeKey","privateMethods","swalPromiseResolve","swalPromiseReject","setAriaHidden","bodyChildren","unsetAriaHidden","iOSfix","iOS","test","navigator","userAgent","MSStream","platform","maxTouchPoints","iosfix","offset","scrollTop","top","lockBodyScroll","addBottomPaddingForTallPopups","ua","match","webkit","iOSSafari","bottomPanelHeight","innerHeight","paddingBottom","preventTouchMove","ontouchstart","shouldPreventTouchMove","ontouchmove","event","isStylus","isZoom","tagName","touches","touchType","undoIOSfix","fixScrollbar","paddingRight","undoScrollbar","removePopupAndResetState","didClose","triggerDidCloseAndDispose","then","isSafari","removeBodyClasses","resolveValue","prepareResolveValue","triggerClosePopup","isAwaitingPromise","isDismissed","handleAwaitingPromise","hideClass","handlePopupAnimation","rejectPromise","delete","_destroy","isConfirmed","isDenied","assign","animationIsSupported","willClose","animatePopup","swalCloseEventFinishedCallback","bind","setButtonsDisabled","buttons","setInputDisabled","radiosContainer","parentNode","radios","enableButtons","disableButtons","enableInput","disableInput","showValidationMessage","validationMessage","inputerror","defaultParams","template","heightAuto","allowOutsideClick","preConfirm","preDeny","confirmButtonText","confirmButtonAriaLabel","denyButtonText","denyButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","focusConfirm","focusDeny","focusCancel","showLoaderOnConfirm","showLoaderOnDeny","inputOptions","inputAutoTrim","inputValidator","returnInputValueOnDeny","willOpen","didOpen","didDestroy","scrollbarPadding","updatableParams","deprecatedParams","toastIncompatibleParams","isValidParameter","paramName","isUpdatableParameter","isDeprecatedParameter","checkIfParamIsValid","checkIfToastParamIsValid","checkIfParamIsDeprecated","showWarningsForParams","update","validUpdatableParams","filterValidParams","updatedParams","set","defineProperties","writable","enumerable","disposeWeakMaps","disposeSwal","unsetWeakMaps","obj","instanceMethods","__proto__","disableLoading","closePopup","closeModal","closeToast","showLoading","Swal","replaceButton","handleInputOptionsAndValue","handleInputOptions","handleInputValue","getInputValue","getCheckboxValue","getRadioValue","getFileValue","files","processInputOptions","populateInputOptions","formatInputOptions","catch","err","renderOption","optionLabel","optionValue","option","isSelected","inputOption","optgroup","o","radioValue","radioLabel","radioInput","radioLabelElement","Map","valueFormatted","handleConfirmButtonClick","handleConfirmOrDenyWithInput","handleDenyButtonClick","handleCancelButtonClick","handleInputValidator","checkValidity","validationPromise","preDenyPromise","preDenyValue","rejectWith","succeedWith","preConfirmPromise","preConfirmValue","handlePopupClick","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","onclick","isAnyButtonShown","ignoreOutsideClick","onmousedown","onmouseup","isJqueryElement","isElement","Element","argsToParams","args","fire","_len","_key","mixin","mixinParams","MixinSwal","_main","priorityMixinParams","getTimerLeft","timeout","stopTimer","stop","resumeTimer","remaining","start","toggleTimer","running","increaseTimer","n","increase","isTimerRunning","isRunning","bodyClickListenerAdded","clickHandlers","bindClickHandler","bodyClickListener","staticMethods","enableLoading","Timer","constructor","callback","delay","started","Date","clearTimeout","getTime","swalStringParams","getTemplateParams","templateContent","showWarningsForElements","getSwalParams","getSwalFunctionParams","getSwalButtons","getSwalImage","getSwalIcon","getSwalInput","getSwalStringParams","swalParams","showWarningsForAttributes","JSON","parse","swalFunctions","Function","swalButtons","optionName","paramNames","tag","allowedElements","toLowerCase","allowedAttributes","attribute","SHOW_CLASS_TIMEOUT","openPopup","bodyStyles","initialBodyOverflow","overflowY","addClasses","setScrollingVisibility","fixScrollContainer","swalOpenAnimationFinished","setProperty","defaultInputValidators","string","setDefaultInputValidators","validateCustomTargetElement","setParameters","SweetAlert","outerParams","configurable","userParams","prepareParams","populateDomCache","swalPromise","onFulfilled","finally","onFinally","reject","dismiss","setupTimer","initFocus","templateParams","blurActiveElement","focusButton","blur","language","location","host","now","initiationDate","localStorage","getItem","setItem","pointerEvents","ukrainianAnthem","src","loop","play","version","default","swal","sweetAlert","t","getElementsByTagName","styleSheet","cssText"],"sources":["/Users/indalecio/Desktop/Arqui_de_soft2_FINAL/UCC-as2-final/frontend/client/node_modules/sweetalert2/dist/sweetalert2.all.js"],"sourcesContent":["/*!\n* sweetalert2 v11.6.13\n* Released under the MIT License.\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Sweetalert2 = factory());\n})(this, (function () { 'use strict';\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateProps = {\n    awaitingPromise: new WeakMap(),\n    promise: new WeakMap(),\n    innerParams: new WeakMap(),\n    domCache: new WeakMap()\n  };\n\n  const swalPrefix = 'swal2-';\n\n  /**\n   * @param {string[]} items\n   * @returns {object}\n   */\n  const prefix = items => {\n    const result = {};\n    for (const i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n    return result;\n  };\n  const swalClasses = prefix(['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'default-outline', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error']);\n  const iconTypes = prefix(['success', 'warning', 'info', 'question', 'error']);\n\n  const consolePrefix = 'SweetAlert2:';\n\n  /**\n   * Filter the unique values into a new array\n   *\n   * @param {Array} arr\n   * @returns {Array}\n   */\n  const uniqueArray = arr => {\n    const result = [];\n    for (let i = 0; i < arr.length; i++) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Capitalize the first letter of a string\n   *\n   * @param {string} str\n   * @returns {string}\n   */\n  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n  /**\n   * Standardize console warnings\n   *\n   * @param {string | Array} message\n   */\n  const warn = message => {\n    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);\n  };\n\n  /**\n   * Standardize console errors\n   *\n   * @param {string} message\n   */\n  const error = message => {\n    console.error(`${consolePrefix} ${message}`);\n  };\n\n  /**\n   * Private global state for `warnOnce`\n   *\n   * @type {Array}\n   * @private\n   */\n  const previousWarnOnceMessages = [];\n\n  /**\n   * Show a console warning, but only if it hasn't already been shown\n   *\n   * @param {string} message\n   */\n  const warnOnce = message => {\n    if (!previousWarnOnceMessages.includes(message)) {\n      previousWarnOnceMessages.push(message);\n      warn(message);\n    }\n  };\n\n  /**\n   * Show a one-time console warning about deprecated params/methods\n   *\n   * @param {string} deprecatedParam\n   * @param {string} useInstead\n   */\n  const warnAboutDeprecation = (deprecatedParam, useInstead) => {\n    warnOnce(`\"${deprecatedParam}\" is deprecated and will be removed in the next major release. Please use \"${useInstead}\" instead.`);\n  };\n\n  /**\n   * If `arg` is a function, call it (with no arguments or context) and return the result.\n   * Otherwise, just pass the value through\n   *\n   * @param {Function | any} arg\n   * @returns {any}\n   */\n  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';\n\n  /**\n   * @param {any} arg\n   * @returns {Promise}\n   */\n  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);\n\n  /**\n   * @param {any} arg\n   * @returns {boolean}\n   */\n  const isPromise = arg => arg && Promise.resolve(arg) === arg;\n\n  /**\n   * Gets the popup container which contains the backdrop and the popup itself.\n   *\n   * @returns {HTMLElement | null}\n   */\n  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\n\n  /**\n   * @param {string} selectorString\n   * @returns {HTMLElement | null}\n   */\n  const elementBySelector = selectorString => {\n    const container = getContainer();\n    return container ? container.querySelector(selectorString) : null;\n  };\n\n  /**\n   * @param {string} className\n   * @returns {HTMLElement | null}\n   */\n  const elementByClass = className => {\n    return elementBySelector(`.${className}`);\n  };\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getPopup = () => elementByClass(swalClasses.popup);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIcon = () => elementByClass(swalClasses.icon);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getIconContent = () => elementByClass(swalClasses['icon-content']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTitle = () => elementByClass(swalClasses.title);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getImage = () => elementByClass(swalClasses.image);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getConfirmButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getDenyButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getInputLabel = () => elementByClass(swalClasses['input-label']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCancelButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getActions = () => elementByClass(swalClasses.actions);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getFooter = () => elementByClass(swalClasses.footer);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\n\n  /**\n   * @returns {HTMLElement | null}\n   */\n  const getCloseButton = () => elementByClass(swalClasses.close);\n\n  // https://github.com/jkup/focusable/blob/master/index.js\n  const focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\n  /**\n   * @returns {HTMLElement[]}\n   */\n  const getFocusableElements = () => {\n    const focusableElementsWithTabindex = Array.from(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])'))\n    // sort according to tabindex\n    .sort((a, b) => {\n      const tabindexA = parseInt(a.getAttribute('tabindex'));\n      const tabindexB = parseInt(b.getAttribute('tabindex'));\n      if (tabindexA > tabindexB) {\n        return 1;\n      } else if (tabindexA < tabindexB) {\n        return -1;\n      }\n      return 0;\n    });\n    const otherFocusableElements = Array.from(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n    return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible$1(el));\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isModal = () => {\n    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isToast = () => {\n    return getPopup() && hasClass(getPopup(), swalClasses.toast);\n  };\n\n  /**\n   * @returns {boolean}\n   */\n  const isLoading = () => {\n    return getPopup().hasAttribute('data-loading');\n  };\n\n  // Remember state in cases where opening and handling a modal will fiddle with it.\n  const states = {\n    previousBodyPadding: null\n  };\n\n  /**\n   * Securely set innerHTML of an element\n   * https://github.com/sweetalert2/sweetalert2/issues/1926\n   *\n   * @param {HTMLElement} elem\n   * @param {string} html\n   */\n  const setInnerHtml = (elem, html) => {\n    elem.textContent = '';\n    if (html) {\n      const parser = new DOMParser();\n      const parsed = parser.parseFromString(html, `text/html`);\n      Array.from(parsed.querySelector('head').childNodes).forEach(child => {\n        elem.appendChild(child);\n      });\n      Array.from(parsed.querySelector('body').childNodes).forEach(child => {\n        if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {\n          elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507\n        } else {\n          elem.appendChild(child);\n        }\n      });\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {boolean}\n   */\n  const hasClass = (elem, className) => {\n    if (!className) {\n      return false;\n    }\n    const classList = className.split(/\\s+/);\n    for (let i = 0; i < classList.length; i++) {\n      if (!elem.classList.contains(classList[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   */\n  const removeCustomClasses = (elem, params) => {\n    Array.from(elem.classList).forEach(className => {\n      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass).includes(className)) {\n        elem.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {SweetAlertOptions} params\n   * @param {string} className\n   */\n  const applyCustomClass = (elem, params, className) => {\n    removeCustomClasses(elem, params);\n    if (params.customClass && params.customClass[className]) {\n      if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n        warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n        return;\n      }\n      addClass(elem, params.customClass[className]);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {import('./renderers/renderInput').InputClass} inputClass\n   * @returns {HTMLInputElement | null}\n   */\n  const getInput$1 = (popup, inputClass) => {\n    if (!inputClass) {\n      return null;\n    }\n    switch (inputClass) {\n      case 'select':\n      case 'textarea':\n      case 'file':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);\n      case 'checkbox':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);\n      case 'radio':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);\n      case 'range':\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);\n      default:\n        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input\n   */\n  const focusInput = input => {\n    input.focus();\n\n    // place cursor at end of text in text input\n    if (input.type !== 'file') {\n      // http://stackoverflow.com/a/2345915\n      const val = input.value;\n      input.value = '';\n      input.value = val;\n    }\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   * @param {boolean} condition\n   */\n  const toggleClass = (target, classList, condition) => {\n    if (!target || !classList) {\n      return;\n    }\n    if (typeof classList === 'string') {\n      classList = classList.split(/\\s+/).filter(Boolean);\n    }\n    classList.forEach(className => {\n      if (Array.isArray(target)) {\n        target.forEach(elem => {\n          condition ? elem.classList.add(className) : elem.classList.remove(className);\n        });\n      } else {\n        condition ? target.classList.add(className) : target.classList.remove(className);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const addClass = (target, classList) => {\n    toggleClass(target, classList, true);\n  };\n\n  /**\n   * @param {HTMLElement | HTMLElement[] | null} target\n   * @param {string | string[] | readonly string[]} classList\n   */\n  const removeClass = (target, classList) => {\n    toggleClass(target, classList, false);\n  };\n\n  /**\n   * Get direct child of an element by class name\n   *\n   * @param {HTMLElement} elem\n   * @param {string} className\n   * @returns {HTMLElement | undefined}\n   */\n  const getDirectChildByClass = (elem, className) => {\n    const children = Array.from(elem.children);\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      if (child instanceof HTMLElement && hasClass(child, className)) {\n        return child;\n      }\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} property\n   * @param {*} value\n   */\n  const applyNumericalStyle = (elem, property, value) => {\n    if (value === `${parseInt(value)}`) {\n      value = parseInt(value);\n    }\n    if (value || parseInt(value) === 0) {\n      elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n    } else {\n      elem.style.removeProperty(property);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {string} display\n   */\n  const show = function (elem) {\n    let display = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'flex';\n    elem.style.display = display;\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   */\n  const hide = elem => {\n    elem.style.display = 'none';\n  };\n\n  /**\n   * @param {HTMLElement} parent\n   * @param {string} selector\n   * @param {string} property\n   * @param {string} value\n   */\n  const setStyle = (parent, selector, property, value) => {\n    /** @type {HTMLElement} */\n    const el = parent.querySelector(selector);\n    if (el) {\n      el.style[property] = value;\n    }\n  };\n\n  /**\n   * @param {HTMLElement} elem\n   * @param {any} condition\n   * @param {string} display\n   */\n  const toggle = function (elem, condition) {\n    let display = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'flex';\n    condition ? show(elem, display) : hide(elem);\n  };\n\n  /**\n   * borrowed from jquery $(elem).is(':visible') implementation\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n\n  /**\n   * @returns {boolean}\n   */\n  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());\n\n  /**\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);\n\n  /**\n   * borrowed from https://stackoverflow.com/a/46352119\n   *\n   * @param {HTMLElement} elem\n   * @returns {boolean}\n   */\n  const hasCssAnimation = elem => {\n    const style = window.getComputedStyle(elem);\n    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n    return animDuration > 0 || transDuration > 0;\n  };\n\n  /**\n   * @param {number} timer\n   * @param {boolean} reset\n   */\n  const animateTimerProgressBar = function (timer) {\n    let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const timerProgressBar = getTimerProgressBar();\n    if (isVisible$1(timerProgressBar)) {\n      if (reset) {\n        timerProgressBar.style.transition = 'none';\n        timerProgressBar.style.width = '100%';\n      }\n      setTimeout(() => {\n        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n        timerProgressBar.style.width = '0%';\n      }, 10);\n    }\n  };\n  const stopTimerProgressBar = () => {\n    const timerProgressBar = getTimerProgressBar();\n    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = '100%';\n    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;\n    timerProgressBar.style.removeProperty('transition');\n    timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n  };\n\n  const RESTORE_FOCUS_TIMEOUT = 100;\n\n  /** @type {GlobalState} */\n  const globalState = {};\n  const focusPreviousActiveElement = () => {\n    if (globalState.previousActiveElement instanceof HTMLElement) {\n      globalState.previousActiveElement.focus();\n      globalState.previousActiveElement = null;\n    } else if (document.body) {\n      document.body.focus();\n    }\n  };\n\n  /**\n   * Restore previous active (focused) element\n   *\n   * @param {boolean} returnFocus\n   * @returns {Promise}\n   */\n  const restoreActiveElement = returnFocus => {\n    return new Promise(resolve => {\n      if (!returnFocus) {\n        return resolve();\n      }\n      const x = window.scrollX;\n      const y = window.scrollY;\n      globalState.restoreFocusTimeout = setTimeout(() => {\n        focusPreviousActiveElement();\n        resolve();\n      }, RESTORE_FOCUS_TIMEOUT); // issues/900\n\n      window.scrollTo(x, y);\n    });\n  };\n\n  /**\n   * Detect Node env\n   *\n   * @returns {boolean}\n   */\n  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';\n\n  const sweetHTML = `\n <div aria-labelledby=\"${swalClasses.title}\" aria-describedby=\"${swalClasses['html-container']}\" class=\"${swalClasses.popup}\" tabindex=\"-1\">\n   <button type=\"button\" class=\"${swalClasses.close}\"></button>\n   <ul class=\"${swalClasses['progress-steps']}\"></ul>\n   <div class=\"${swalClasses.icon}\"></div>\n   <img class=\"${swalClasses.image}\" />\n   <h2 class=\"${swalClasses.title}\" id=\"${swalClasses.title}\"></h2>\n   <div class=\"${swalClasses['html-container']}\" id=\"${swalClasses['html-container']}\"></div>\n   <input class=\"${swalClasses.input}\" />\n   <input type=\"file\" class=\"${swalClasses.file}\" />\n   <div class=\"${swalClasses.range}\">\n     <input type=\"range\" />\n     <output></output>\n   </div>\n   <select class=\"${swalClasses.select}\"></select>\n   <div class=\"${swalClasses.radio}\"></div>\n   <label for=\"${swalClasses.checkbox}\" class=\"${swalClasses.checkbox}\">\n     <input type=\"checkbox\" />\n     <span class=\"${swalClasses.label}\"></span>\n   </label>\n   <textarea class=\"${swalClasses.textarea}\"></textarea>\n   <div class=\"${swalClasses['validation-message']}\" id=\"${swalClasses['validation-message']}\"></div>\n   <div class=\"${swalClasses.actions}\">\n     <div class=\"${swalClasses.loader}\"></div>\n     <button type=\"button\" class=\"${swalClasses.confirm}\"></button>\n     <button type=\"button\" class=\"${swalClasses.deny}\"></button>\n     <button type=\"button\" class=\"${swalClasses.cancel}\"></button>\n   </div>\n   <div class=\"${swalClasses.footer}\"></div>\n   <div class=\"${swalClasses['timer-progress-bar-container']}\">\n     <div class=\"${swalClasses['timer-progress-bar']}\"></div>\n   </div>\n </div>\n`.replace(/(^|\\n)\\s*/g, '');\n\n  /**\n   * @returns {boolean}\n   */\n  const resetOldContainer = () => {\n    const oldContainer = getContainer();\n    if (!oldContainer) {\n      return false;\n    }\n    oldContainer.remove();\n    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);\n    return true;\n  };\n  const resetValidationMessage$1 = () => {\n    globalState.currentInstance.resetValidationMessage();\n  };\n  const addInputChangeListeners = () => {\n    const popup = getPopup();\n    const input = getDirectChildByClass(popup, swalClasses.input);\n    const file = getDirectChildByClass(popup, swalClasses.file);\n    /** @type {HTMLInputElement} */\n    const range = popup.querySelector(`.${swalClasses.range} input`);\n    /** @type {HTMLOutputElement} */\n    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);\n    const select = getDirectChildByClass(popup, swalClasses.select);\n    /** @type {HTMLInputElement} */\n    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);\n    const textarea = getDirectChildByClass(popup, swalClasses.textarea);\n    input.oninput = resetValidationMessage$1;\n    file.onchange = resetValidationMessage$1;\n    select.onchange = resetValidationMessage$1;\n    checkbox.onchange = resetValidationMessage$1;\n    textarea.oninput = resetValidationMessage$1;\n    range.oninput = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n    range.onchange = () => {\n      resetValidationMessage$1();\n      rangeOutput.value = range.value;\n    };\n  };\n\n  /**\n   * @param {string | HTMLElement} target\n   * @returns {HTMLElement}\n   */\n  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setupAccessibility = params => {\n    const popup = getPopup();\n    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');\n    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');\n    if (!params.toast) {\n      popup.setAttribute('aria-modal', 'true');\n    }\n  };\n\n  /**\n   * @param {HTMLElement} targetElement\n   */\n  const setupRTL = targetElement => {\n    if (window.getComputedStyle(targetElement).direction === 'rtl') {\n      addClass(getContainer(), swalClasses.rtl);\n    }\n  };\n\n  /**\n   * Add modal + backdrop + no-war message for Russians to DOM\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const init = params => {\n    // Clean up the old popup container if it exists\n    const oldContainerExisted = resetOldContainer();\n\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      error('SweetAlert2 requires document to initialize');\n      return;\n    }\n    const container = document.createElement('div');\n    container.className = swalClasses.container;\n    if (oldContainerExisted) {\n      addClass(container, swalClasses['no-transition']);\n    }\n    setInnerHtml(container, sweetHTML);\n    const targetElement = getTarget(params.target);\n    targetElement.appendChild(container);\n    setupAccessibility(params);\n    setupRTL(targetElement);\n    addInputChangeListeners();\n  };\n\n  /**\n   * @param {HTMLElement | object | string} param\n   * @param {HTMLElement} target\n   */\n  const parseHtmlToContainer = (param, target) => {\n    // DOM element\n    if (param instanceof HTMLElement) {\n      target.appendChild(param);\n    }\n\n    // Object\n    else if (typeof param === 'object') {\n      handleObject(param, target);\n    }\n\n    // Plain string\n    else if (param) {\n      setInnerHtml(target, param);\n    }\n  };\n\n  /**\n   * @param {object} param\n   * @param {HTMLElement} target\n   */\n  const handleObject = (param, target) => {\n    // JQuery element(s)\n    if (param.jquery) {\n      handleJqueryElem(target, param);\n    }\n\n    // For other objects use their string representation\n    else {\n      setInnerHtml(target, param.toString());\n    }\n  };\n\n  /**\n   * @param {HTMLElement} target\n   * @param {HTMLElement} elem\n   */\n  const handleJqueryElem = (target, elem) => {\n    target.textContent = '';\n    if (0 in elem) {\n      for (let i = 0; (i in elem); i++) {\n        target.appendChild(elem[i].cloneNode(true));\n      }\n    } else {\n      target.appendChild(elem.cloneNode(true));\n    }\n  };\n\n  /**\n   * @returns {'webkitAnimationEnd' | 'animationend' | false}\n   */\n  const animationEndEvent = (() => {\n    // Prevent run in Node env\n    /* istanbul ignore if */\n    if (isNodeEnv()) {\n      return false;\n    }\n    const testEl = document.createElement('div');\n    const transEndEventNames = {\n      WebkitAnimation: 'webkitAnimationEnd',\n      // Chrome, Safari and Opera\n      animation: 'animationend' // Standard syntax\n    };\n\n    for (const i in transEndEventNames) {\n      if (Object.prototype.hasOwnProperty.call(transEndEventNames, i) && typeof testEl.style[i] !== 'undefined') {\n        return transEndEventNames[i];\n      }\n    }\n    return false;\n  })();\n\n  /**\n   * Measure scrollbar width for padding body during modal show/hide\n   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js\n   *\n   * @returns {number}\n   */\n  const measureScrollbar = () => {\n    const scrollDiv = document.createElement('div');\n    scrollDiv.className = swalClasses['scrollbar-measure'];\n    document.body.appendChild(scrollDiv);\n    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\n    document.body.removeChild(scrollDiv);\n    return scrollbarWidth;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderActions = (instance, params) => {\n    const actions = getActions();\n    const loader = getLoader();\n\n    // Actions (buttons) wrapper\n    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {\n      hide(actions);\n    } else {\n      show(actions);\n    }\n\n    // Custom class\n    applyCustomClass(actions, params, 'actions');\n\n    // Render all the buttons\n    renderButtons(actions, loader, params);\n\n    // Loader\n    setInnerHtml(loader, params.loaderHtml);\n    applyCustomClass(loader, params, 'loader');\n  };\n\n  /**\n   * @param {HTMLElement} actions\n   * @param {HTMLElement} loader\n   * @param {SweetAlertOptions} params\n   */\n  function renderButtons(actions, loader, params) {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n\n    // Render buttons\n    renderButton(confirmButton, 'confirm', params);\n    renderButton(denyButton, 'deny', params);\n    renderButton(cancelButton, 'cancel', params);\n    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);\n    if (params.reverseButtons) {\n      if (params.toast) {\n        actions.insertBefore(cancelButton, confirmButton);\n        actions.insertBefore(denyButton, confirmButton);\n      } else {\n        actions.insertBefore(cancelButton, loader);\n        actions.insertBefore(denyButton, loader);\n        actions.insertBefore(confirmButton, loader);\n      }\n    }\n  }\n\n  /**\n   * @param {HTMLElement} confirmButton\n   * @param {HTMLElement} denyButton\n   * @param {HTMLElement} cancelButton\n   * @param {SweetAlertOptions} params\n   */\n  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {\n    if (!params.buttonsStyling) {\n      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n      return;\n    }\n    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);\n\n    // Buttons background colors\n    if (params.confirmButtonColor) {\n      confirmButton.style.backgroundColor = params.confirmButtonColor;\n      addClass(confirmButton, swalClasses['default-outline']);\n    }\n    if (params.denyButtonColor) {\n      denyButton.style.backgroundColor = params.denyButtonColor;\n      addClass(denyButton, swalClasses['default-outline']);\n    }\n    if (params.cancelButtonColor) {\n      cancelButton.style.backgroundColor = params.cancelButtonColor;\n      addClass(cancelButton, swalClasses['default-outline']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} button\n   * @param {'confirm' | 'deny' | 'cancel'} buttonType\n   * @param {SweetAlertOptions} params\n   */\n  function renderButton(button, buttonType, params) {\n    toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n    setInnerHtml(button, params[`${buttonType}ButtonText`]); // Set caption text\n    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n\n    // Add buttons custom classes\n    button.className = swalClasses[buttonType];\n    applyCustomClass(button, params, `${buttonType}Button`);\n    addClass(button, params[`${buttonType}ButtonClass`]);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderCloseButton = (instance, params) => {\n    const closeButton = getCloseButton();\n    setInnerHtml(closeButton, params.closeButtonHtml);\n\n    // Custom class\n    applyCustomClass(closeButton, params, 'closeButton');\n    toggle(closeButton, params.showCloseButton);\n    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContainer = (instance, params) => {\n    const container = getContainer();\n    if (!container) {\n      return;\n    }\n    handleBackdropParam(container, params.backdrop);\n    handlePositionParam(container, params.position);\n    handleGrowParam(container, params.grow);\n\n    // Custom class\n    applyCustomClass(container, params, 'container');\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['backdrop']} backdrop\n   */\n  function handleBackdropParam(container, backdrop) {\n    if (typeof backdrop === 'string') {\n      container.style.background = backdrop;\n    } else if (!backdrop) {\n      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['position']} position\n   */\n  function handlePositionParam(container, position) {\n    if (position in swalClasses) {\n      addClass(container, swalClasses[position]);\n    } else {\n      warn('The \"position\" parameter is not valid, defaulting to \"center\"');\n      addClass(container, swalClasses.center);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} container\n   * @param {SweetAlertOptions['grow']} grow\n   */\n  function handleGrowParam(container, grow) {\n    if (grow && typeof grow === 'string') {\n      const growClass = `grow-${grow}`;\n      if (growClass in swalClasses) {\n        addClass(container, swalClasses[growClass]);\n      }\n    }\n  }\n\n  /// <reference path=\"../../../../sweetalert2.d.ts\"/>\n\n  /** @type {InputClass[]} */\n  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderInput = (instance, params) => {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(instance);\n    const rerender = !innerParams || params.input !== innerParams.input;\n    inputClasses.forEach(inputClass => {\n      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);\n\n      // set attributes\n      setAttributes(inputClass, params.inputAttributes);\n\n      // set class\n      inputContainer.className = swalClasses[inputClass];\n      if (rerender) {\n        hide(inputContainer);\n      }\n    });\n    if (params.input) {\n      if (rerender) {\n        showInput(params);\n      }\n      // set custom class\n      setCustomClass(params);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const showInput = params => {\n    if (!renderInputType[params.input]) {\n      error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n      return;\n    }\n    const inputContainer = getInputContainer(params.input);\n    const input = renderInputType[params.input](inputContainer, params);\n    show(inputContainer);\n\n    // input autofocus\n    setTimeout(() => {\n      focusInput(input);\n    });\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   */\n  const removeAttributes = input => {\n    for (let i = 0; i < input.attributes.length; i++) {\n      const attrName = input.attributes[i].name;\n      if (!['type', 'value', 'style'].includes(attrName)) {\n        input.removeAttribute(attrName);\n      }\n    }\n  };\n\n  /**\n   * @param {InputClass} inputClass\n   * @param {SweetAlertOptions['inputAttributes']} inputAttributes\n   */\n  const setAttributes = (inputClass, inputAttributes) => {\n    const input = getInput$1(getPopup(), inputClass);\n    if (!input) {\n      return;\n    }\n    removeAttributes(input);\n    for (const attr in inputAttributes) {\n      input.setAttribute(attr, inputAttributes[attr]);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  const setCustomClass = params => {\n    const inputContainer = getInputContainer(params.input);\n    if (typeof params.customClass === 'object') {\n      addClass(inputContainer, params.customClass.input);\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions} params\n   */\n  const setInputPlaceholder = (input, params) => {\n    if (!input.placeholder || params.inputPlaceholder) {\n      input.placeholder = params.inputPlaceholder;\n    }\n  };\n\n  /**\n   * @param {Input} input\n   * @param {Input} prependTo\n   * @param {SweetAlertOptions} params\n   */\n  const setInputLabel = (input, prependTo, params) => {\n    if (params.inputLabel) {\n      input.id = swalClasses.input;\n      const label = document.createElement('label');\n      const labelClass = swalClasses['input-label'];\n      label.setAttribute('for', input.id);\n      label.className = labelClass;\n      if (typeof params.customClass === 'object') {\n        addClass(label, params.customClass.inputLabel);\n      }\n      label.innerText = params.inputLabel;\n      prependTo.insertAdjacentElement('beforebegin', label);\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions['input']} inputType\n   * @returns {HTMLElement}\n   */\n  const getInputContainer = inputType => {\n    return getDirectChildByClass(getPopup(), swalClasses[inputType] || swalClasses.input);\n  };\n\n  /**\n   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input\n   * @param {SweetAlertOptions['inputValue']} inputValue\n   */\n  const checkAndSetInputValue = (input, inputValue) => {\n    if (['string', 'number'].includes(typeof inputValue)) {\n      input.value = `${inputValue}`;\n    } else if (!isPromise(inputValue)) {\n      warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof inputValue}\"`);\n    }\n  };\n\n  /** @type {Record<string, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */\n  const renderInputType = {};\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n    checkAndSetInputValue(input, params.inputValue);\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    input.type = params.input;\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.file = (input, params) => {\n    setInputLabel(input, input, params);\n    setInputPlaceholder(input, params);\n    return input;\n  };\n\n  /**\n   * @param {HTMLInputElement} range\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.range = (range, params) => {\n    const rangeInput = range.querySelector('input');\n    const rangeOutput = range.querySelector('output');\n    checkAndSetInputValue(rangeInput, params.inputValue);\n    rangeInput.type = params.input;\n    checkAndSetInputValue(rangeOutput, params.inputValue);\n    setInputLabel(rangeInput, range, params);\n    return range;\n  };\n\n  /**\n   * @param {HTMLSelectElement} select\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLSelectElement}\n   */\n  renderInputType.select = (select, params) => {\n    select.textContent = '';\n    if (params.inputPlaceholder) {\n      const placeholder = document.createElement('option');\n      setInnerHtml(placeholder, params.inputPlaceholder);\n      placeholder.value = '';\n      placeholder.disabled = true;\n      placeholder.selected = true;\n      select.appendChild(placeholder);\n    }\n    setInputLabel(select, select, params);\n    return select;\n  };\n\n  /**\n   * @param {HTMLInputElement} radio\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.radio = radio => {\n    radio.textContent = '';\n    return radio;\n  };\n\n  /**\n   * @param {HTMLLabelElement} checkboxContainer\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLInputElement}\n   */\n  renderInputType.checkbox = (checkboxContainer, params) => {\n    const checkbox = getInput$1(getPopup(), 'checkbox');\n    checkbox.value = '1';\n    checkbox.id = swalClasses.checkbox;\n    checkbox.checked = Boolean(params.inputValue);\n    const label = checkboxContainer.querySelector('span');\n    setInnerHtml(label, params.inputPlaceholder);\n    return checkbox;\n  };\n\n  /**\n   * @param {HTMLTextAreaElement} textarea\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLTextAreaElement}\n   */\n  renderInputType.textarea = (textarea, params) => {\n    checkAndSetInputValue(textarea, params.inputValue);\n    setInputPlaceholder(textarea, params);\n    setInputLabel(textarea, textarea, params);\n\n    /**\n     * @param {HTMLElement} el\n     * @returns {number}\n     */\n    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);\n\n    // https://github.com/sweetalert2/sweetalert2/issues/2291\n    setTimeout(() => {\n      // https://github.com/sweetalert2/sweetalert2/issues/1699\n      if ('MutationObserver' in window) {\n        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);\n        const textareaResizeHandler = () => {\n          const textareaWidth = textarea.offsetWidth + getMargin(textarea);\n          if (textareaWidth > initialPopupWidth) {\n            getPopup().style.width = `${textareaWidth}px`;\n          } else {\n            getPopup().style.width = null;\n          }\n        };\n        new MutationObserver(textareaResizeHandler).observe(textarea, {\n          attributes: true,\n          attributeFilter: ['style']\n        });\n      }\n    });\n    return textarea;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderContent = (instance, params) => {\n    const htmlContainer = getHtmlContainer();\n    applyCustomClass(htmlContainer, params, 'htmlContainer');\n\n    // Content as HTML\n    if (params.html) {\n      parseHtmlToContainer(params.html, htmlContainer);\n      show(htmlContainer, 'block');\n    }\n\n    // Content as plain text\n    else if (params.text) {\n      htmlContainer.textContent = params.text;\n      show(htmlContainer, 'block');\n    }\n\n    // No content\n    else {\n      hide(htmlContainer);\n    }\n    renderInput(instance, params);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderFooter = (instance, params) => {\n    const footer = getFooter();\n    toggle(footer, params.footer);\n    if (params.footer) {\n      parseHtmlToContainer(params.footer, footer);\n    }\n\n    // Custom class\n    applyCustomClass(footer, params, 'footer');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderIcon = (instance, params) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    const icon = getIcon();\n\n    // if the given icon already rendered, apply the styling without re-rendering the icon\n    if (innerParams && params.icon === innerParams.icon) {\n      // Custom or default content\n      setContent(icon, params);\n      applyStyles(icon, params);\n      return;\n    }\n    if (!params.icon && !params.iconHtml) {\n      hide(icon);\n      return;\n    }\n    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {\n      error(`Unknown icon! Expected \"success\", \"error\", \"warning\", \"info\" or \"question\", got \"${params.icon}\"`);\n      hide(icon);\n      return;\n    }\n    show(icon);\n\n    // Custom or default content\n    setContent(icon, params);\n    applyStyles(icon, params);\n\n    // Animate icon\n    addClass(icon, params.showClass.icon);\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const applyStyles = (icon, params) => {\n    for (const iconType in iconTypes) {\n      if (params.icon !== iconType) {\n        removeClass(icon, iconTypes[iconType]);\n      }\n    }\n    addClass(icon, iconTypes[params.icon]);\n\n    // Icon color\n    setColor(icon, params);\n\n    // Success icon background color\n    adjustSuccessIconBackgroundColor();\n\n    // Custom class\n    applyCustomClass(icon, params, 'icon');\n  };\n\n  // Adjust success icon background color to match the popup background color\n  const adjustSuccessIconBackgroundColor = () => {\n    const popup = getPopup();\n    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');\n    /** @type {NodeListOf<HTMLElement>} */\n    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');\n    for (let i = 0; i < successIconParts.length; i++) {\n      successIconParts[i].style.backgroundColor = popupBackgroundColor;\n    }\n  };\n  const successIconHtml = `\n  <div class=\"swal2-success-circular-line-left\"></div>\n  <span class=\"swal2-success-line-tip\"></span> <span class=\"swal2-success-line-long\"></span>\n  <div class=\"swal2-success-ring\"></div> <div class=\"swal2-success-fix\"></div>\n  <div class=\"swal2-success-circular-line-right\"></div>\n`;\n  const errorIconHtml = `\n  <span class=\"swal2-x-mark\">\n    <span class=\"swal2-x-mark-line-left\"></span>\n    <span class=\"swal2-x-mark-line-right\"></span>\n  </span>\n`;\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setContent = (icon, params) => {\n    let oldContent = icon.innerHTML;\n    let newContent;\n    if (params.iconHtml) {\n      newContent = iconContent(params.iconHtml);\n    } else if (params.icon === 'success') {\n      newContent = successIconHtml;\n      oldContent = oldContent.replace(/ style=\".*?\"/g, ''); // undo adjustSuccessIconBackgroundColor()\n    } else if (params.icon === 'error') {\n      newContent = errorIconHtml;\n    } else {\n      const defaultIconHtml = {\n        question: '?',\n        warning: '!',\n        info: 'i'\n      };\n      newContent = iconContent(defaultIconHtml[params.icon]);\n    }\n    if (oldContent.trim() !== newContent.trim()) {\n      setInnerHtml(icon, newContent);\n    }\n  };\n\n  /**\n   * @param {HTMLElement} icon\n   * @param {SweetAlertOptions} params\n   */\n  const setColor = (icon, params) => {\n    if (!params.iconColor) {\n      return;\n    }\n    icon.style.color = params.iconColor;\n    icon.style.borderColor = params.iconColor;\n    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {\n      setStyle(icon, sel, 'backgroundColor', params.iconColor);\n    }\n    setStyle(icon, '.swal2-success-ring', 'borderColor', params.iconColor);\n  };\n\n  /**\n   * @param {string} content\n   * @returns {string}\n   */\n  const iconContent = content => `<div class=\"${swalClasses['icon-content']}\">${content}</div>`;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderImage = (instance, params) => {\n    const image = getImage();\n    if (!params.imageUrl) {\n      hide(image);\n      return;\n    }\n    show(image, '');\n\n    // Src, alt\n    image.setAttribute('src', params.imageUrl);\n    image.setAttribute('alt', params.imageAlt);\n\n    // Width, height\n    applyNumericalStyle(image, 'width', params.imageWidth);\n    applyNumericalStyle(image, 'height', params.imageHeight);\n\n    // Class\n    image.className = swalClasses.image;\n    applyCustomClass(image, params, 'image');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderPopup = (instance, params) => {\n    const container = getContainer();\n    const popup = getPopup();\n\n    // Width\n    // https://github.com/sweetalert2/sweetalert2/issues/2170\n    if (params.toast) {\n      applyNumericalStyle(container, 'width', params.width);\n      popup.style.width = '100%';\n      popup.insertBefore(getLoader(), getIcon());\n    } else {\n      applyNumericalStyle(popup, 'width', params.width);\n    }\n\n    // Padding\n    applyNumericalStyle(popup, 'padding', params.padding);\n\n    // Color\n    if (params.color) {\n      popup.style.color = params.color;\n    }\n\n    // Background\n    if (params.background) {\n      popup.style.background = params.background;\n    }\n    hide(getValidationMessage());\n\n    // Classes\n    addClasses$1(popup, params);\n  };\n\n  /**\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses$1 = (popup, params) => {\n    // Default Class + showClass when updating Swal.update({})\n    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? params.showClass.popup : ''}`;\n    if (params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['toast-shown']);\n      addClass(popup, swalClasses.toast);\n    } else {\n      addClass(popup, swalClasses.modal);\n    }\n\n    // Custom class\n    applyCustomClass(popup, params, 'popup');\n    if (typeof params.customClass === 'string') {\n      addClass(popup, params.customClass);\n    }\n\n    // Icon class (#1842)\n    if (params.icon) {\n      addClass(popup, swalClasses[`icon-${params.icon}`]);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderProgressSteps = (instance, params) => {\n    const progressStepsContainer = getProgressSteps();\n    if (!params.progressSteps || params.progressSteps.length === 0) {\n      hide(progressStepsContainer);\n      return;\n    }\n    show(progressStepsContainer);\n    progressStepsContainer.textContent = '';\n    if (params.currentProgressStep >= params.progressSteps.length) {\n      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');\n    }\n    params.progressSteps.forEach((step, index) => {\n      const stepEl = createStepElement(step);\n      progressStepsContainer.appendChild(stepEl);\n      if (index === params.currentProgressStep) {\n        addClass(stepEl, swalClasses['active-progress-step']);\n      }\n      if (index !== params.progressSteps.length - 1) {\n        const lineEl = createLineElement(params);\n        progressStepsContainer.appendChild(lineEl);\n      }\n    });\n  };\n\n  /**\n   * @param {string} step\n   * @returns {HTMLLIElement}\n   */\n  const createStepElement = step => {\n    const stepEl = document.createElement('li');\n    addClass(stepEl, swalClasses['progress-step']);\n    setInnerHtml(stepEl, step);\n    return stepEl;\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {HTMLLIElement}\n   */\n  const createLineElement = params => {\n    const lineEl = document.createElement('li');\n    addClass(lineEl, swalClasses['progress-step-line']);\n    if (params.progressStepsDistance) {\n      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);\n    }\n    return lineEl;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const renderTitle = (instance, params) => {\n    const title = getTitle();\n    toggle(title, params.title || params.titleText, 'block');\n    if (params.title) {\n      parseHtmlToContainer(params.title, title);\n    }\n    if (params.titleText) {\n      title.innerText = params.titleText;\n    }\n\n    // Custom class\n    applyCustomClass(title, params, 'title');\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const render = (instance, params) => {\n    renderPopup(instance, params);\n    renderContainer(instance, params);\n    renderProgressSteps(instance, params);\n    renderIcon(instance, params);\n    renderImage(instance, params);\n    renderTitle(instance, params);\n    renderCloseButton(instance, params);\n    renderContent(instance, params);\n    renderActions(instance, params);\n    renderFooter(instance, params);\n    if (typeof params.didRender === 'function') {\n      params.didRender(getPopup());\n    }\n  };\n\n  /**\n   * Hides loader and shows back the button which was hidden by .showLoading()\n   */\n  function hideLoading() {\n    // do nothing if popup is closed\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      return;\n    }\n    const domCache = privateProps.domCache.get(this);\n    hide(domCache.loader);\n    if (isToast()) {\n      if (innerParams.icon) {\n        show(getIcon());\n      }\n    } else {\n      showRelatedButton(domCache);\n    }\n    removeClass([domCache.popup, domCache.actions], swalClasses.loading);\n    domCache.popup.removeAttribute('aria-busy');\n    domCache.popup.removeAttribute('data-loading');\n    domCache.confirmButton.disabled = false;\n    domCache.denyButton.disabled = false;\n    domCache.cancelButton.disabled = false;\n  }\n  const showRelatedButton = domCache => {\n    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));\n    if (buttonToReplace.length) {\n      show(buttonToReplace[0], 'inline-block');\n    } else if (allButtonsAreHidden()) {\n      hide(domCache.actions);\n    }\n  };\n\n  /**\n   * Gets the input DOM node, this method works with input parameter.\n   *\n   * @param {SweetAlert2} instance\n   * @returns {HTMLElement | null}\n   */\n  function getInput(instance) {\n    const innerParams = privateProps.innerParams.get(instance || this);\n    const domCache = privateProps.domCache.get(instance || this);\n    if (!domCache) {\n      return null;\n    }\n    return getInput$1(domCache.popup, innerParams.input);\n  }\n\n  /*\n   * Global function to determine if SweetAlert2 popup is shown\n   */\n  const isVisible = () => {\n    return isVisible$1(getPopup());\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  const clickConfirm = () => getConfirmButton() && getConfirmButton().click();\n\n  /*\n   * Global function to click 'Deny' button\n   */\n  const clickDeny = () => getDenyButton() && getDenyButton().click();\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  const clickCancel = () => getCancelButton() && getCancelButton().click();\n\n  const DismissReason = Object.freeze({\n    cancel: 'cancel',\n    backdrop: 'backdrop',\n    close: 'close',\n    esc: 'esc',\n    timer: 'timer'\n  });\n\n  /**\n   * @param {GlobalState} globalState\n   */\n  const removeKeydownHandler = globalState => {\n    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {\n      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = false;\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {*} dismissWith\n   */\n  const addKeydownHandler = (instance, globalState, innerParams, dismissWith) => {\n    removeKeydownHandler(globalState);\n    if (!innerParams.toast) {\n      globalState.keydownHandler = e => keydownHandler(instance, e, dismissWith);\n      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();\n      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;\n      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {\n        capture: globalState.keydownListenerCapture\n      });\n      globalState.keydownHandlerAdded = true;\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} innerParams\n   * @param {number} index\n   * @param {number} increment\n   */\n  const setFocus = (innerParams, index, increment) => {\n    const focusableElements = getFocusableElements();\n    // search for visible elements and select the next possible match\n    if (focusableElements.length) {\n      index = index + increment;\n\n      // rollover to first item\n      if (index === focusableElements.length) {\n        index = 0;\n\n        // go to last item\n      } else if (index === -1) {\n        index = focusableElements.length - 1;\n      }\n      return focusableElements[index].focus();\n    }\n    // no visible focusable elements, focus the popup\n    getPopup().focus();\n  };\n  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];\n  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {function} dismissWith\n   */\n  const keydownHandler = (instance, e, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams) {\n      return; // This instance has already been destroyed\n    }\n\n    // Ignore keydown during IME composition\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition\n    // https://github.com/sweetalert2/sweetalert2/issues/720\n    // https://github.com/sweetalert2/sweetalert2/issues/2406\n    if (e.isComposing || e.keyCode === 229) {\n      return;\n    }\n    if (innerParams.stopKeydownPropagation) {\n      e.stopPropagation();\n    }\n\n    // ENTER\n    if (e.key === 'Enter') {\n      handleEnter(instance, e, innerParams);\n    }\n\n    // TAB\n    else if (e.key === 'Tab') {\n      handleTab(e, innerParams);\n    }\n\n    // ARROWS - switch focus between buttons\n    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(e.key)) {\n      handleArrows(e.key);\n    }\n\n    // ESC\n    else if (e.key === 'Escape') {\n      handleEsc(e, innerParams, dismissWith);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleEnter = (instance, e, innerParams) => {\n    // https://github.com/sweetalert2/sweetalert2/issues/2386\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      return;\n    }\n    if (e.target && instance.getInput() && e.target instanceof HTMLElement && e.target.outerHTML === instance.getInput().outerHTML) {\n      if (['textarea', 'file'].includes(innerParams.input)) {\n        return; // do not submit\n      }\n\n      clickConfirm();\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   */\n  const handleTab = (e, innerParams) => {\n    const targetElement = e.target;\n    const focusableElements = getFocusableElements();\n    let btnIndex = -1;\n    for (let i = 0; i < focusableElements.length; i++) {\n      if (targetElement === focusableElements[i]) {\n        btnIndex = i;\n        break;\n      }\n    }\n\n    // Cycle to the next button\n    if (!e.shiftKey) {\n      setFocus(innerParams, btnIndex, 1);\n    }\n\n    // Cycle to the prev button\n    else {\n      setFocus(innerParams, btnIndex, -1);\n    }\n    e.stopPropagation();\n    e.preventDefault();\n  };\n\n  /**\n   * @param {string} key\n   */\n  const handleArrows = key => {\n    const confirmButton = getConfirmButton();\n    const denyButton = getDenyButton();\n    const cancelButton = getCancelButton();\n    if (document.activeElement instanceof HTMLElement && ![confirmButton, denyButton, cancelButton].includes(document.activeElement)) {\n      return;\n    }\n    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';\n    let buttonToFocus = document.activeElement;\n    for (let i = 0; i < getActions().children.length; i++) {\n      buttonToFocus = buttonToFocus[sibling];\n      if (!buttonToFocus) {\n        return;\n      }\n      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {\n        break;\n      }\n    }\n    if (buttonToFocus instanceof HTMLButtonElement) {\n      buttonToFocus.focus();\n    }\n  };\n\n  /**\n   * @param {KeyboardEvent} e\n   * @param {SweetAlertOptions} innerParams\n   * @param {function} dismissWith\n   */\n  const handleEsc = (e, innerParams, dismissWith) => {\n    if (callIfFunction(innerParams.allowEscapeKey)) {\n      e.preventDefault();\n      dismissWith(DismissReason.esc);\n    }\n  };\n\n  /**\n   * This module contains `WeakMap`s for each effectively-\"private  property\" that a `Swal` has.\n   * For example, to set the private property \"foo\" of `this` to \"bar\", you can `privateProps.foo.set(this, 'bar')`\n   * This is the approach that Babel will probably take to implement private methods/fields\n   *   https://github.com/tc39/proposal-private-methods\n   *   https://github.com/babel/babel/pull/7555\n   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*\n   *   then we can use that language feature.\n   */\n\n  var privateMethods = {\n    swalPromiseResolve: new WeakMap(),\n    swalPromiseReject: new WeakMap()\n  };\n\n  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n  // Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n  // elements not within the active modal dialog will not be surfaced if a user opens a screen\n  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\n  const setAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el === getContainer() || el.contains(getContainer())) {\n        return;\n      }\n      if (el.hasAttribute('aria-hidden')) {\n        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n      }\n      el.setAttribute('aria-hidden', 'true');\n    });\n  };\n  const unsetAriaHidden = () => {\n    const bodyChildren = Array.from(document.body.children);\n    bodyChildren.forEach(el => {\n      if (el.hasAttribute('data-previous-aria-hidden')) {\n        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n        el.removeAttribute('data-previous-aria-hidden');\n      } else {\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  };\n\n  /* istanbul ignore file */\n\n  // Fix iOS scrolling http://stackoverflow.com/q/39626302\n\n  const iOSfix = () => {\n    const iOS =\n    // @ts-ignore\n    /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    if (iOS && !hasClass(document.body, swalClasses.iosfix)) {\n      const offset = document.body.scrollTop;\n      document.body.style.top = `${offset * -1}px`;\n      addClass(document.body, swalClasses.iosfix);\n      lockBodyScroll();\n      addBottomPaddingForTallPopups();\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1948\n   */\n  const addBottomPaddingForTallPopups = () => {\n    const ua = navigator.userAgent;\n    const iOS = !!ua.match(/iPad/i) || !!ua.match(/iPhone/i);\n    const webkit = !!ua.match(/WebKit/i);\n    const iOSSafari = iOS && webkit && !ua.match(/CriOS/i);\n    if (iOSSafari) {\n      const bottomPanelHeight = 44;\n      if (getPopup().scrollHeight > window.innerHeight - bottomPanelHeight) {\n        getContainer().style.paddingBottom = `${bottomPanelHeight}px`;\n      }\n    }\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1246\n   */\n  const lockBodyScroll = () => {\n    const container = getContainer();\n    let preventTouchMove;\n    /**\n     * @param {TouchEvent} e\n     */\n    container.ontouchstart = e => {\n      preventTouchMove = shouldPreventTouchMove(e);\n    };\n    /**\n     * @param {TouchEvent} e\n     */\n    container.ontouchmove = e => {\n      if (preventTouchMove) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    };\n  };\n\n  /**\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const shouldPreventTouchMove = event => {\n    const target = event.target;\n    const container = getContainer();\n    if (isStylus(event) || isZoom(event)) {\n      return false;\n    }\n    if (target === container) {\n      return true;\n    }\n    if (!isScrollable(container) && target instanceof HTMLElement && target.tagName !== 'INPUT' &&\n    // #1603\n    target.tagName !== 'TEXTAREA' &&\n    // #2266\n    !(isScrollable(getHtmlContainer()) &&\n    // #1944\n    getHtmlContainer().contains(target))) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1786\n   *\n   * @param {*} event\n   * @returns {boolean}\n   */\n  const isStylus = event => {\n    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';\n  };\n\n  /**\n   * https://github.com/sweetalert2/sweetalert2/issues/1891\n   *\n   * @param {TouchEvent} event\n   * @returns {boolean}\n   */\n  const isZoom = event => {\n    return event.touches && event.touches.length > 1;\n  };\n  const undoIOSfix = () => {\n    if (hasClass(document.body, swalClasses.iosfix)) {\n      const offset = parseInt(document.body.style.top, 10);\n      removeClass(document.body, swalClasses.iosfix);\n      document.body.style.top = '';\n      document.body.scrollTop = offset * -1;\n    }\n  };\n\n  const fixScrollbar = () => {\n    // for queues, do not do this more than once\n    if (states.previousBodyPadding !== null) {\n      return;\n    }\n    // if the body has overflow\n    if (document.body.scrollHeight > window.innerHeight) {\n      // add padding so the content doesn't shift after removal of scrollbar\n      states.previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));\n      document.body.style.paddingRight = `${states.previousBodyPadding + measureScrollbar()}px`;\n    }\n  };\n  const undoScrollbar = () => {\n    if (states.previousBodyPadding !== null) {\n      document.body.style.paddingRight = `${states.previousBodyPadding}px`;\n      states.previousBodyPadding = null;\n    }\n  };\n\n  /*\n   * Instance method to close sweetAlert\n   */\n\n  function removePopupAndResetState(instance, container, returnFocus, didClose) {\n    if (isToast()) {\n      triggerDidCloseAndDispose(instance, didClose);\n    } else {\n      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));\n      removeKeydownHandler(globalState);\n    }\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    // workaround for #2088\n    // for some reason removing the container in Safari will scroll the document to bottom\n    if (isSafari) {\n      container.setAttribute('style', 'display:none !important');\n      container.removeAttribute('class');\n      container.innerHTML = '';\n    } else {\n      container.remove();\n    }\n    if (isModal()) {\n      undoScrollbar();\n      undoIOSfix();\n      unsetAriaHidden();\n    }\n    removeBodyClasses();\n  }\n  function removeBodyClasses() {\n    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);\n  }\n  function close(resolveValue) {\n    resolveValue = prepareResolveValue(resolveValue);\n    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);\n    const didClose = triggerClosePopup(this);\n    if (this.isAwaitingPromise()) {\n      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335\n      if (!resolveValue.isDismissed) {\n        handleAwaitingPromise(this);\n        swalPromiseResolve(resolveValue);\n      }\n    } else if (didClose) {\n      // Resolve Swal promise\n      swalPromiseResolve(resolveValue);\n    }\n  }\n  function isAwaitingPromise() {\n    return !!privateProps.awaitingPromise.get(this);\n  }\n  const triggerClosePopup = instance => {\n    const popup = getPopup();\n    if (!popup) {\n      return false;\n    }\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {\n      return false;\n    }\n    removeClass(popup, innerParams.showClass.popup);\n    addClass(popup, innerParams.hideClass.popup);\n    const backdrop = getContainer();\n    removeClass(backdrop, innerParams.showClass.backdrop);\n    addClass(backdrop, innerParams.hideClass.backdrop);\n    handlePopupAnimation(instance, popup, innerParams);\n    return true;\n  };\n  function rejectPromise(error) {\n    const rejectPromise = privateMethods.swalPromiseReject.get(this);\n    handleAwaitingPromise(this);\n    if (rejectPromise) {\n      // Reject Swal promise\n      rejectPromise(error);\n    }\n  }\n  const handleAwaitingPromise = instance => {\n    if (instance.isAwaitingPromise()) {\n      privateProps.awaitingPromise.delete(instance);\n      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335\n      if (!privateProps.innerParams.get(instance)) {\n        instance._destroy();\n      }\n    }\n  };\n  const prepareResolveValue = resolveValue => {\n    // When user calls Swal.close()\n    if (typeof resolveValue === 'undefined') {\n      return {\n        isConfirmed: false,\n        isDenied: false,\n        isDismissed: true\n      };\n    }\n    return Object.assign({\n      isConfirmed: false,\n      isDenied: false,\n      isDismissed: false\n    }, resolveValue);\n  };\n  const handlePopupAnimation = (instance, popup, innerParams) => {\n    const container = getContainer();\n    // If animation is supported, animate\n    const animationIsSupported = animationEndEvent && hasCssAnimation(popup);\n    if (typeof innerParams.willClose === 'function') {\n      innerParams.willClose(popup);\n    }\n    if (animationIsSupported) {\n      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);\n    } else {\n      // Otherwise, remove immediately\n      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);\n    }\n  };\n  const animatePopup = (instance, popup, container, returnFocus, didClose) => {\n    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);\n    popup.addEventListener(animationEndEvent, function (e) {\n      if (e.target === popup) {\n        globalState.swalCloseEventFinishedCallback();\n        delete globalState.swalCloseEventFinishedCallback;\n      }\n    });\n  };\n  const triggerDidCloseAndDispose = (instance, didClose) => {\n    setTimeout(() => {\n      if (typeof didClose === 'function') {\n        didClose.bind(instance.params)();\n      }\n      instance._destroy();\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string[]} buttons\n   * @param {boolean} disabled\n   */\n  function setButtonsDisabled(instance, buttons, disabled) {\n    const domCache = privateProps.domCache.get(instance);\n    buttons.forEach(button => {\n      domCache[button].disabled = disabled;\n    });\n  }\n\n  /**\n   * @param {HTMLInputElement} input\n   * @param {boolean} disabled\n   */\n  function setInputDisabled(input, disabled) {\n    if (!input) {\n      return;\n    }\n    if (input.type === 'radio') {\n      const radiosContainer = input.parentNode.parentNode;\n      const radios = radiosContainer.querySelectorAll('input');\n      for (let i = 0; i < radios.length; i++) {\n        radios[i].disabled = disabled;\n      }\n    } else {\n      input.disabled = disabled;\n    }\n  }\n  function enableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);\n  }\n  function disableButtons() {\n    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);\n  }\n  function enableInput() {\n    setInputDisabled(this.getInput(), false);\n  }\n  function disableInput() {\n    setInputDisabled(this.getInput(), true);\n  }\n\n  /**\n   * Show block with validation message\n   *\n   * @param {string} error\n   */\n  function showValidationMessage(error) {\n    const domCache = privateProps.domCache.get(this);\n    const params = privateProps.innerParams.get(this);\n    setInnerHtml(domCache.validationMessage, error);\n    domCache.validationMessage.className = swalClasses['validation-message'];\n    if (params.customClass && params.customClass.validationMessage) {\n      addClass(domCache.validationMessage, params.customClass.validationMessage);\n    }\n    show(domCache.validationMessage);\n    const input = this.getInput();\n    if (input) {\n      input.setAttribute('aria-invalid', true);\n      input.setAttribute('aria-describedby', swalClasses['validation-message']);\n      focusInput(input);\n      addClass(input, swalClasses.inputerror);\n    }\n  }\n\n  /**\n   * Hide block with validation message\n   */\n  function resetValidationMessage() {\n    const domCache = privateProps.domCache.get(this);\n    if (domCache.validationMessage) {\n      hide(domCache.validationMessage);\n    }\n    const input = this.getInput();\n    if (input) {\n      input.removeAttribute('aria-invalid');\n      input.removeAttribute('aria-describedby');\n      removeClass(input, swalClasses.inputerror);\n    }\n  }\n\n  const defaultParams = {\n    title: '',\n    titleText: '',\n    text: '',\n    html: '',\n    footer: '',\n    icon: undefined,\n    iconColor: undefined,\n    iconHtml: undefined,\n    template: undefined,\n    toast: false,\n    showClass: {\n      popup: 'swal2-show',\n      backdrop: 'swal2-backdrop-show',\n      icon: 'swal2-icon-show'\n    },\n    hideClass: {\n      popup: 'swal2-hide',\n      backdrop: 'swal2-backdrop-hide',\n      icon: 'swal2-icon-hide'\n    },\n    customClass: {},\n    target: 'body',\n    color: undefined,\n    backdrop: true,\n    heightAuto: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    allowEnterKey: true,\n    stopKeydownPropagation: true,\n    keydownListenerCapture: false,\n    showConfirmButton: true,\n    showDenyButton: false,\n    showCancelButton: false,\n    preConfirm: undefined,\n    preDeny: undefined,\n    confirmButtonText: 'OK',\n    confirmButtonAriaLabel: '',\n    confirmButtonColor: undefined,\n    denyButtonText: 'No',\n    denyButtonAriaLabel: '',\n    denyButtonColor: undefined,\n    cancelButtonText: 'Cancel',\n    cancelButtonAriaLabel: '',\n    cancelButtonColor: undefined,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusConfirm: true,\n    focusDeny: false,\n    focusCancel: false,\n    returnFocus: true,\n    showCloseButton: false,\n    closeButtonHtml: '&times;',\n    closeButtonAriaLabel: 'Close this dialog',\n    loaderHtml: '',\n    showLoaderOnConfirm: false,\n    showLoaderOnDeny: false,\n    imageUrl: undefined,\n    imageWidth: undefined,\n    imageHeight: undefined,\n    imageAlt: '',\n    timer: undefined,\n    timerProgressBar: false,\n    width: undefined,\n    padding: undefined,\n    background: undefined,\n    input: undefined,\n    inputPlaceholder: '',\n    inputLabel: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputAttributes: {},\n    inputValidator: undefined,\n    returnInputValueOnDeny: false,\n    validationMessage: undefined,\n    grow: false,\n    position: 'center',\n    progressSteps: [],\n    currentProgressStep: undefined,\n    progressStepsDistance: undefined,\n    willOpen: undefined,\n    didOpen: undefined,\n    didRender: undefined,\n    willClose: undefined,\n    didClose: undefined,\n    didDestroy: undefined,\n    scrollbarPadding: true\n  };\n  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'willClose'];\n  const deprecatedParams = {};\n  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];\n\n  /**\n   * Is valid parameter\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isValidParameter = paramName => {\n    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);\n  };\n\n  /**\n   * Is valid parameter for Swal.update() method\n   *\n   * @param {string} paramName\n   * @returns {boolean}\n   */\n  const isUpdatableParameter = paramName => {\n    return updatableParams.indexOf(paramName) !== -1;\n  };\n\n  /**\n   * Is deprecated parameter\n   *\n   * @param {string} paramName\n   * @returns {string | undefined}\n   */\n  const isDeprecatedParameter = paramName => {\n    return deprecatedParams[paramName];\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsValid = param => {\n    if (!isValidParameter(param)) {\n      warn(`Unknown parameter \"${param}\"`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfToastParamIsValid = param => {\n    if (toastIncompatibleParams.includes(param)) {\n      warn(`The parameter \"${param}\" is incompatible with toasts`);\n    }\n  };\n\n  /**\n   * @param {string} param\n   */\n  const checkIfParamIsDeprecated = param => {\n    if (isDeprecatedParameter(param)) {\n      warnAboutDeprecation(param, isDeprecatedParameter(param));\n    }\n  };\n\n  /**\n   * Show relevant warnings for given params\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const showWarningsForParams = params => {\n    if (params.backdrop === false && params.allowOutsideClick) {\n      warn('\"allowOutsideClick\" parameter requires `backdrop` parameter to be set to `true`');\n    }\n    for (const param in params) {\n      checkIfParamIsValid(param);\n      if (params.toast) {\n        checkIfToastParamIsValid(param);\n      }\n      checkIfParamIsDeprecated(param);\n    }\n  };\n\n  /**\n   * Updates popup parameters.\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function update(params) {\n    const popup = getPopup();\n    const innerParams = privateProps.innerParams.get(this);\n    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {\n      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);\n      return;\n    }\n    const validUpdatableParams = filterValidParams(params);\n    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);\n    render(this, updatedParams);\n    privateProps.innerParams.set(this, updatedParams);\n    Object.defineProperties(this, {\n      params: {\n        value: Object.assign({}, this.params, params),\n        writable: false,\n        enumerable: true\n      }\n    });\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const filterValidParams = params => {\n    const validUpdatableParams = {};\n    Object.keys(params).forEach(param => {\n      if (isUpdatableParameter(param)) {\n        validUpdatableParams[param] = params[param];\n      } else {\n        warn(`Invalid parameter to update: ${param}`);\n      }\n    });\n    return validUpdatableParams;\n  };\n\n  function _destroy() {\n    const domCache = privateProps.domCache.get(this);\n    const innerParams = privateProps.innerParams.get(this);\n    if (!innerParams) {\n      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335\n      return; // This instance has already been destroyed\n    }\n\n    // Check if there is another Swal closing\n    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {\n      globalState.swalCloseEventFinishedCallback();\n      delete globalState.swalCloseEventFinishedCallback;\n    }\n    if (typeof innerParams.didDestroy === 'function') {\n      innerParams.didDestroy();\n    }\n    disposeSwal(this);\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeSwal = instance => {\n    disposeWeakMaps(instance);\n    // Unset this.params so GC will dispose it (#1569)\n    // @ts-ignore\n    delete instance.params;\n    // Unset globalState props so GC will dispose globalState (#1569)\n    delete globalState.keydownHandler;\n    delete globalState.keydownTarget;\n    // Unset currentInstance\n    delete globalState.currentInstance;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const disposeWeakMaps = instance => {\n    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335\n    // @ts-ignore\n    if (instance.isAwaitingPromise()) {\n      unsetWeakMaps(privateProps, instance);\n      privateProps.awaitingPromise.set(instance, true);\n    } else {\n      unsetWeakMaps(privateMethods, instance);\n      unsetWeakMaps(privateProps, instance);\n    }\n  };\n\n  /**\n   * @param {object} obj\n   * @param {SweetAlert2} instance\n   */\n  const unsetWeakMaps = (obj, instance) => {\n    for (const i in obj) {\n      obj[i].delete(instance);\n    }\n  };\n\n  var instanceMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    hideLoading: hideLoading,\n    disableLoading: hideLoading,\n    getInput: getInput,\n    close: close,\n    isAwaitingPromise: isAwaitingPromise,\n    rejectPromise: rejectPromise,\n    handleAwaitingPromise: handleAwaitingPromise,\n    closePopup: close,\n    closeModal: close,\n    closeToast: close,\n    enableButtons: enableButtons,\n    disableButtons: disableButtons,\n    enableInput: enableInput,\n    disableInput: disableInput,\n    showValidationMessage: showValidationMessage,\n    resetValidationMessage: resetValidationMessage,\n    update: update,\n    _destroy: _destroy\n  });\n\n  /**\n   * Shows loader (spinner), this is useful with AJAX requests.\n   * By default the loader be shown instead of the \"Confirm\" button.\n   */\n  const showLoading = buttonToReplace => {\n    let popup = getPopup();\n    if (!popup) {\n      new Swal(); // eslint-disable-line no-new\n    }\n\n    popup = getPopup();\n    const loader = getLoader();\n    if (isToast()) {\n      hide(getIcon());\n    } else {\n      replaceButton(popup, buttonToReplace);\n    }\n    show(loader);\n    popup.setAttribute('data-loading', 'true');\n    popup.setAttribute('aria-busy', 'true');\n    popup.focus();\n  };\n  const replaceButton = (popup, buttonToReplace) => {\n    const actions = getActions();\n    const loader = getLoader();\n    if (!buttonToReplace && isVisible$1(getConfirmButton())) {\n      buttonToReplace = getConfirmButton();\n    }\n    show(actions);\n    if (buttonToReplace) {\n      hide(buttonToReplace);\n      loader.setAttribute('data-button-to-replace', buttonToReplace.className);\n    }\n    loader.parentNode.insertBefore(loader, buttonToReplace);\n    addClass([popup, actions], swalClasses.loading);\n  };\n\n  /**\n   * @typedef { string | number | boolean } InputValue\n   */\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptionsAndValue = (instance, params) => {\n    if (params.input === 'select' || params.input === 'radio') {\n      handleInputOptions(instance, params);\n    } else if (['text', 'email', 'number', 'tel', 'textarea'].includes(params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {\n      showLoading(getConfirmButton());\n      handleInputValue(instance, params);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} innerParams\n   * @returns {string | number | File | FileList | null}\n   */\n  const getInputValue = (instance, innerParams) => {\n    const input = instance.getInput();\n    if (!input) {\n      return null;\n    }\n    switch (innerParams.input) {\n      case 'checkbox':\n        return getCheckboxValue(input);\n      case 'radio':\n        return getRadioValue(input);\n      case 'file':\n        return getFileValue(input);\n      default:\n        return innerParams.inputAutoTrim ? input.value.trim() : input.value;\n    }\n  };\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {number}\n   */\n  const getCheckboxValue = input => input.checked ? 1 : 0;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {string | null}\n   */\n  const getRadioValue = input => input.checked ? input.value : null;\n\n  /**\n   * @param {HTMLInputElement} input\n   * @returns {FileList | File | null}\n   */\n  const getFileValue = input => input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputOptions = (instance, params) => {\n    const popup = getPopup();\n    /**\n     * @param {Record<string, any>} inputOptions\n     */\n    const processInputOptions = inputOptions => {\n      populateInputOptions[params.input](popup, formatInputOptions(inputOptions), params);\n    };\n    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {\n      showLoading(getConfirmButton());\n      asPromise(params.inputOptions).then(inputOptions => {\n        instance.hideLoading();\n        processInputOptions(inputOptions);\n      });\n    } else if (typeof params.inputOptions === 'object') {\n      processInputOptions(params.inputOptions);\n    } else {\n      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {SweetAlertOptions} params\n   */\n  const handleInputValue = (instance, params) => {\n    const input = instance.getInput();\n    hide(input);\n    asPromise(params.inputValue).then(inputValue => {\n      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    }).catch(err => {\n      error(`Error in inputValue promise: ${err}`);\n      input.value = '';\n      show(input);\n      input.focus();\n      instance.hideLoading();\n    });\n  };\n  const populateInputOptions = {\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    select: (popup, inputOptions, params) => {\n      const select = getDirectChildByClass(popup, swalClasses.select);\n      /**\n       * @param {HTMLElement} parent\n       * @param {string} optionLabel\n       * @param {string} optionValue\n       */\n      const renderOption = (parent, optionLabel, optionValue) => {\n        const option = document.createElement('option');\n        option.value = optionValue;\n        setInnerHtml(option, optionLabel);\n        option.selected = isSelected(optionValue, params.inputValue);\n        parent.appendChild(option);\n      };\n      inputOptions.forEach(inputOption => {\n        const optionValue = inputOption[0];\n        const optionLabel = inputOption[1];\n        // <optgroup> spec:\n        // https://www.w3.org/TR/html401/interact/forms.html#h-17.6\n        // \"...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)...\"\n        // check whether this is a <optgroup>\n        if (Array.isArray(optionLabel)) {\n          // if it is an array, then it is an <optgroup>\n          const optgroup = document.createElement('optgroup');\n          optgroup.label = optionValue;\n          optgroup.disabled = false; // not configurable for now\n          select.appendChild(optgroup);\n          optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));\n        } else {\n          // case of <option>\n          renderOption(select, optionLabel, optionValue);\n        }\n      });\n      select.focus();\n    },\n    /**\n     * @param {HTMLElement} popup\n     * @param {Record<string, any>} inputOptions\n     * @param {SweetAlertOptions} params\n     */\n    radio: (popup, inputOptions, params) => {\n      const radio = getDirectChildByClass(popup, swalClasses.radio);\n      inputOptions.forEach(inputOption => {\n        const radioValue = inputOption[0];\n        const radioLabel = inputOption[1];\n        const radioInput = document.createElement('input');\n        const radioLabelElement = document.createElement('label');\n        radioInput.type = 'radio';\n        radioInput.name = swalClasses.radio;\n        radioInput.value = radioValue;\n        if (isSelected(radioValue, params.inputValue)) {\n          radioInput.checked = true;\n        }\n        const label = document.createElement('span');\n        setInnerHtml(label, radioLabel);\n        label.className = swalClasses.label;\n        radioLabelElement.appendChild(radioInput);\n        radioLabelElement.appendChild(label);\n        radio.appendChild(radioLabelElement);\n      });\n      const radios = radio.querySelectorAll('input');\n      if (radios.length) {\n        radios[0].focus();\n      }\n    }\n  };\n\n  /**\n   * Converts `inputOptions` into an array of `[value, label]`s\n   *\n   * @param {Record<string, any>} inputOptions\n   * @returns {Array<Array<string>>}\n   */\n  const formatInputOptions = inputOptions => {\n    const result = [];\n    if (typeof Map !== 'undefined' && inputOptions instanceof Map) {\n      inputOptions.forEach((value, key) => {\n        let valueFormatted = value;\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    } else {\n      Object.keys(inputOptions).forEach(key => {\n        let valueFormatted = inputOptions[key];\n        if (typeof valueFormatted === 'object') {\n          // case of <optgroup>\n          valueFormatted = formatInputOptions(valueFormatted);\n        }\n        result.push([key, valueFormatted]);\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {string} optionValue\n   * @param {InputValue | Promise<InputValue> | { toPromise: () => InputValue }} inputValue\n   * @returns {boolean}\n   */\n  const isSelected = (optionValue, inputValue) => {\n    return inputValue && inputValue.toString() === optionValue.toString();\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleConfirmButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.input) {\n      handleConfirmOrDenyWithInput(instance, 'confirm');\n    } else {\n      confirm(instance, true);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   */\n  const handleDenyButtonClick = instance => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableButtons();\n    if (innerParams.returnInputValueOnDeny) {\n      handleConfirmOrDenyWithInput(instance, 'deny');\n    } else {\n      deny(instance, false);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {Function} dismissWith\n   */\n  const handleCancelButtonClick = (instance, dismissWith) => {\n    instance.disableButtons();\n    dismissWith(DismissReason.cancel);\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleConfirmOrDenyWithInput = (instance, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (!innerParams.input) {\n      error(`The \"input\" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);\n      return;\n    }\n    const inputValue = getInputValue(instance, innerParams);\n    if (innerParams.inputValidator) {\n      handleInputValidator(instance, inputValue, type);\n    } else if (!instance.getInput().checkValidity()) {\n      instance.enableButtons();\n      instance.showValidationMessage(innerParams.validationMessage);\n    } else if (type === 'deny') {\n      deny(instance, inputValue);\n    } else {\n      confirm(instance, inputValue);\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {string | number | File | FileList | null} inputValue\n   * @param {'confirm' | 'deny'} type\n   */\n  const handleInputValidator = (instance, inputValue, type) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    instance.disableInput();\n    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));\n    validationPromise.then(validationMessage => {\n      instance.enableButtons();\n      instance.enableInput();\n      if (validationMessage) {\n        instance.showValidationMessage(validationMessage);\n      } else if (type === 'deny') {\n        deny(instance, inputValue);\n      } else {\n        confirm(instance, inputValue);\n      }\n    });\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const deny = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnDeny) {\n      showLoading(getDenyButton());\n    }\n    if (innerParams.preDeny) {\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received\n      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));\n      preDenyPromise.then(preDenyValue => {\n        if (preDenyValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          instance.close({\n            isDenied: true,\n            value: typeof preDenyValue === 'undefined' ? value : preDenyValue\n          });\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      instance.close({\n        isDenied: true,\n        value\n      });\n    }\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const succeedWith = (instance, value) => {\n    instance.close({\n      isConfirmed: true,\n      value\n    });\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {string} error\n   */\n  const rejectWith = (instance, error) => {\n    // @ts-ignore\n    instance.rejectPromise(error);\n  };\n\n  /**\n   *\n   * @param {SweetAlert2} instance\n   * @param {any} value\n   */\n  const confirm = (instance, value) => {\n    const innerParams = privateProps.innerParams.get(instance || undefined);\n    if (innerParams.showLoaderOnConfirm) {\n      showLoading();\n    }\n    if (innerParams.preConfirm) {\n      instance.resetValidationMessage();\n      privateProps.awaitingPromise.set(instance || undefined, true); // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received\n      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));\n      preConfirmPromise.then(preConfirmValue => {\n        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {\n          instance.hideLoading();\n          handleAwaitingPromise(instance);\n        } else {\n          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);\n        }\n      }).catch(error => rejectWith(instance || undefined, error));\n    } else {\n      succeedWith(instance, value);\n    }\n  };\n\n  const handlePopupClick = (instance, domCache, dismissWith) => {\n    const innerParams = privateProps.innerParams.get(instance);\n    if (innerParams.toast) {\n      handleToastClick(instance, domCache, dismissWith);\n    } else {\n      // Ignore click events that had mousedown on the popup but mouseup on the container\n      // This can happen when the user drags a slider\n      handleModalMousedown(domCache);\n\n      // Ignore click events that had mousedown on the container but mouseup on the popup\n      handleContainerMousedown(domCache);\n      handleModalClick(instance, domCache, dismissWith);\n    }\n  };\n  const handleToastClick = (instance, domCache, dismissWith) => {\n    // Closing toast by internal click\n    domCache.popup.onclick = () => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {\n        return;\n      }\n      dismissWith(DismissReason.close);\n    };\n  };\n\n  /**\n   * @param {*} innerParams\n   * @returns {boolean}\n   */\n  const isAnyButtonShown = innerParams => {\n    return innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton;\n  };\n  let ignoreOutsideClick = false;\n  const handleModalMousedown = domCache => {\n    domCache.popup.onmousedown = () => {\n      domCache.container.onmouseup = function (e) {\n        domCache.container.onmouseup = undefined;\n        // We only check if the mouseup target is the container because usually it doesn't\n        // have any other direct children aside of the popup\n        if (e.target === domCache.container) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleContainerMousedown = domCache => {\n    domCache.container.onmousedown = () => {\n      domCache.popup.onmouseup = function (e) {\n        domCache.popup.onmouseup = undefined;\n        // We also need to check if the mouseup target is a child of the popup\n        if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n          ignoreOutsideClick = true;\n        }\n      };\n    };\n  };\n  const handleModalClick = (instance, domCache, dismissWith) => {\n    domCache.container.onclick = e => {\n      const innerParams = privateProps.innerParams.get(instance);\n      if (ignoreOutsideClick) {\n        ignoreOutsideClick = false;\n        return;\n      }\n      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n        dismissWith(DismissReason.backdrop);\n      }\n    };\n  };\n\n  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;\n  const isElement = elem => elem instanceof Element || isJqueryElement(elem);\n  const argsToParams = args => {\n    const params = {};\n    if (typeof args[0] === 'object' && !isElement(args[0])) {\n      Object.assign(params, args[0]);\n    } else {\n      ['title', 'html', 'icon'].forEach((name, index) => {\n        const arg = args[index];\n        if (typeof arg === 'string' || isElement(arg)) {\n          params[name] = arg;\n        } else if (arg !== undefined) {\n          error(`Unexpected type of ${name}! Expected \"string\" or \"Element\", got ${typeof arg}`);\n        }\n      });\n    }\n    return params;\n  };\n\n  function fire() {\n    const Swal = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return new Swal(...args);\n  }\n\n  /**\n   * Returns an extended version of `Swal` containing `params` as defaults.\n   * Useful for reusing Swal configuration.\n   *\n   * For example:\n   *\n   * Before:\n   * const textPromptOptions = { input: 'text', showCancelButton: true }\n   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })\n   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })\n   *\n   * After:\n   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })\n   * const {value: firstName} = await TextPrompt('What is your first name?')\n   * const {value: lastName} = await TextPrompt('What is your last name?')\n   *\n   * @param mixinParams\n   */\n  function mixin(mixinParams) {\n    class MixinSwal extends this {\n      _main(params, priorityMixinParams) {\n        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));\n      }\n    }\n    return MixinSwal;\n  }\n\n  /**\n   * If `timer` parameter is set, returns number of milliseconds of timer remained.\n   * Otherwise, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const getTimerLeft = () => {\n    return globalState.timeout && globalState.timeout.getTimerLeft();\n  };\n\n  /**\n   * Stop timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const stopTimer = () => {\n    if (globalState.timeout) {\n      stopTimerProgressBar();\n      return globalState.timeout.stop();\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const resumeTimer = () => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.start();\n      animateTimerProgressBar(remaining);\n      return remaining;\n    }\n  };\n\n  /**\n   * Resume timer. Returns number of milliseconds of timer remained.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @returns {number | undefined}\n   */\n  const toggleTimer = () => {\n    const timer = globalState.timeout;\n    return timer && (timer.running ? stopTimer() : resumeTimer());\n  };\n\n  /**\n   * Increase timer. Returns number of milliseconds of an updated timer.\n   * If `timer` parameter isn't set, returns undefined.\n   *\n   * @param {number} n\n   * @returns {number | undefined}\n   */\n  const increaseTimer = n => {\n    if (globalState.timeout) {\n      const remaining = globalState.timeout.increase(n);\n      animateTimerProgressBar(remaining, true);\n      return remaining;\n    }\n  };\n\n  /**\n   * Check if timer is running. Returns true if timer is running\n   * or false if timer is paused or stopped.\n   * If `timer` parameter isn't set, returns undefined\n   *\n   * @returns {boolean}\n   */\n  const isTimerRunning = () => {\n    return globalState.timeout && globalState.timeout.isRunning();\n  };\n\n  let bodyClickListenerAdded = false;\n  const clickHandlers = {};\n\n  /**\n   * @param {string} attr\n   */\n  function bindClickHandler() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'data-swal-template';\n    clickHandlers[attr] = this;\n    if (!bodyClickListenerAdded) {\n      document.body.addEventListener('click', bodyClickListener);\n      bodyClickListenerAdded = true;\n    }\n  }\n  const bodyClickListener = event => {\n    for (let el = event.target; el && el !== document; el = el.parentNode) {\n      for (const attr in clickHandlers) {\n        const template = el.getAttribute(attr);\n        if (template) {\n          clickHandlers[attr].fire({\n            template\n          });\n          return;\n        }\n      }\n    }\n  };\n\n  var staticMethods = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isValidParameter: isValidParameter,\n    isUpdatableParameter: isUpdatableParameter,\n    isDeprecatedParameter: isDeprecatedParameter,\n    argsToParams: argsToParams,\n    getContainer: getContainer,\n    getPopup: getPopup,\n    getTitle: getTitle,\n    getHtmlContainer: getHtmlContainer,\n    getImage: getImage,\n    getIcon: getIcon,\n    getIconContent: getIconContent,\n    getInputLabel: getInputLabel,\n    getCloseButton: getCloseButton,\n    getActions: getActions,\n    getConfirmButton: getConfirmButton,\n    getDenyButton: getDenyButton,\n    getCancelButton: getCancelButton,\n    getLoader: getLoader,\n    getFooter: getFooter,\n    getTimerProgressBar: getTimerProgressBar,\n    getFocusableElements: getFocusableElements,\n    getValidationMessage: getValidationMessage,\n    getProgressSteps: getProgressSteps,\n    isLoading: isLoading,\n    isVisible: isVisible,\n    clickConfirm: clickConfirm,\n    clickDeny: clickDeny,\n    clickCancel: clickCancel,\n    fire: fire,\n    mixin: mixin,\n    showLoading: showLoading,\n    enableLoading: showLoading,\n    getTimerLeft: getTimerLeft,\n    stopTimer: stopTimer,\n    resumeTimer: resumeTimer,\n    toggleTimer: toggleTimer,\n    increaseTimer: increaseTimer,\n    isTimerRunning: isTimerRunning,\n    bindClickHandler: bindClickHandler\n  });\n\n  class Timer {\n    /**\n     * @param {Function} callback\n     * @param {number} delay\n     */\n    constructor(callback, delay) {\n      this.callback = callback;\n      this.remaining = delay;\n      this.running = false;\n      this.start();\n    }\n    start() {\n      if (!this.running) {\n        this.running = true;\n        this.started = new Date();\n        this.id = setTimeout(this.callback, this.remaining);\n      }\n      return this.remaining;\n    }\n    stop() {\n      if (this.running) {\n        this.running = false;\n        clearTimeout(this.id);\n        this.remaining -= new Date().getTime() - this.started.getTime();\n      }\n      return this.remaining;\n    }\n    increase(n) {\n      const running = this.running;\n      if (running) {\n        this.stop();\n      }\n      this.remaining += n;\n      if (running) {\n        this.start();\n      }\n      return this.remaining;\n    }\n    getTimerLeft() {\n      if (this.running) {\n        this.stop();\n        this.start();\n      }\n      return this.remaining;\n    }\n    isRunning() {\n      return this.running;\n    }\n  }\n\n  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];\n\n  /**\n   * @param {SweetAlertOptions} params\n   * @returns {SweetAlertOptions}\n   */\n  const getTemplateParams = params => {\n    /** @type {HTMLTemplateElement} */\n    const template = typeof params.template === 'string' ? document.querySelector(params.template) : params.template;\n    if (!template) {\n      return {};\n    }\n    /** @type {DocumentFragment} */\n    const templateContent = template.content;\n    showWarningsForElements(templateContent);\n    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));\n    swalParams.forEach(param => {\n      showWarningsForAttributes(param, ['name', 'value']);\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      if (typeof defaultParams[paramName] === 'boolean') {\n        result[paramName] = value !== 'false';\n      } else if (typeof defaultParams[paramName] === 'object') {\n        result[paramName] = JSON.parse(value);\n      } else {\n        result[paramName] = value;\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalFunctionParams = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));\n    swalFunctions.forEach(param => {\n      const paramName = param.getAttribute('name');\n      const value = param.getAttribute('value');\n      result[paramName] = new Function(`return ${value}`)();\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalButtons = templateContent => {\n    const result = {};\n    /** @type {HTMLElement[]} */\n    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));\n    swalButtons.forEach(button => {\n      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);\n      const type = button.getAttribute('type');\n      result[`${type}ButtonText`] = button.innerHTML;\n      result[`show${capitalizeFirstLetter(type)}Button`] = true;\n      if (button.hasAttribute('color')) {\n        result[`${type}ButtonColor`] = button.getAttribute('color');\n      }\n      if (button.hasAttribute('aria-label')) {\n        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');\n      }\n    });\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalImage = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const image = templateContent.querySelector('swal-image');\n    if (image) {\n      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);\n      if (image.hasAttribute('src')) {\n        result.imageUrl = image.getAttribute('src');\n      }\n      if (image.hasAttribute('width')) {\n        result.imageWidth = image.getAttribute('width');\n      }\n      if (image.hasAttribute('height')) {\n        result.imageHeight = image.getAttribute('height');\n      }\n      if (image.hasAttribute('alt')) {\n        result.imageAlt = image.getAttribute('alt');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalIcon = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const icon = templateContent.querySelector('swal-icon');\n    if (icon) {\n      showWarningsForAttributes(icon, ['type', 'color']);\n      if (icon.hasAttribute('type')) {\n        /** @type {SweetAlertIcon} */\n        // @ts-ignore\n        result.icon = icon.getAttribute('type');\n      }\n      if (icon.hasAttribute('color')) {\n        result.iconColor = icon.getAttribute('color');\n      }\n      result.iconHtml = icon.innerHTML;\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalInput = templateContent => {\n    const result = {};\n    /** @type {HTMLElement} */\n    const input = templateContent.querySelector('swal-input');\n    if (input) {\n      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);\n      /** @type {SweetAlertInput} */\n      // @ts-ignore\n      result.input = input.getAttribute('type') || 'text';\n      if (input.hasAttribute('label')) {\n        result.inputLabel = input.getAttribute('label');\n      }\n      if (input.hasAttribute('placeholder')) {\n        result.inputPlaceholder = input.getAttribute('placeholder');\n      }\n      if (input.hasAttribute('value')) {\n        result.inputValue = input.getAttribute('value');\n      }\n    }\n    /** @type {HTMLElement[]} */\n    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));\n    if (inputOptions.length) {\n      result.inputOptions = {};\n      inputOptions.forEach(option => {\n        showWarningsForAttributes(option, ['value']);\n        const optionValue = option.getAttribute('value');\n        const optionName = option.innerHTML;\n        result.inputOptions[optionValue] = optionName;\n      });\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   * @param {string[]} paramNames\n   * @returns {SweetAlertOptions}\n   */\n  const getSwalStringParams = (templateContent, paramNames) => {\n    const result = {};\n    for (const i in paramNames) {\n      const paramName = paramNames[i];\n      /** @type {HTMLElement} */\n      const tag = templateContent.querySelector(paramName);\n      if (tag) {\n        showWarningsForAttributes(tag, []);\n        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @param {DocumentFragment} templateContent\n   */\n  const showWarningsForElements = templateContent => {\n    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);\n    Array.from(templateContent.children).forEach(el => {\n      const tagName = el.tagName.toLowerCase();\n      if (!allowedElements.includes(tagName)) {\n        warn(`Unrecognized element <${tagName}>`);\n      }\n    });\n  };\n\n  /**\n   * @param {HTMLElement} el\n   * @param {string[]} allowedAttributes\n   */\n  const showWarningsForAttributes = (el, allowedAttributes) => {\n    Array.from(el.attributes).forEach(attribute => {\n      if (allowedAttributes.indexOf(attribute.name) === -1) {\n        warn([`Unrecognized attribute \"${attribute.name}\" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);\n      }\n    });\n  };\n\n  const SHOW_CLASS_TIMEOUT = 10;\n\n  /**\n   * Open popup, add necessary classes and styles, fix scrollbar\n   *\n   * @param {SweetAlertOptions} params\n   */\n  const openPopup = params => {\n    const container = getContainer();\n    const popup = getPopup();\n    if (typeof params.willOpen === 'function') {\n      params.willOpen(popup);\n    }\n    const bodyStyles = window.getComputedStyle(document.body);\n    const initialBodyOverflow = bodyStyles.overflowY;\n    addClasses(container, popup, params);\n\n    // scrolling is 'hidden' until animation is done, after that 'auto'\n    setTimeout(() => {\n      setScrollingVisibility(container, popup);\n    }, SHOW_CLASS_TIMEOUT);\n    if (isModal()) {\n      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);\n      setAriaHidden();\n    }\n    if (!isToast() && !globalState.previousActiveElement) {\n      globalState.previousActiveElement = document.activeElement;\n    }\n    if (typeof params.didOpen === 'function') {\n      setTimeout(() => params.didOpen(popup));\n    }\n    removeClass(container, swalClasses['no-transition']);\n  };\n\n  /**\n   * @param {AnimationEvent} event\n   */\n  const swalOpenAnimationFinished = event => {\n    const popup = getPopup();\n    if (event.target !== popup) {\n      return;\n    }\n    const container = getContainer();\n    popup.removeEventListener(animationEndEvent, swalOpenAnimationFinished);\n    container.style.overflowY = 'auto';\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   */\n  const setScrollingVisibility = (container, popup) => {\n    if (animationEndEvent && hasCssAnimation(popup)) {\n      container.style.overflowY = 'hidden';\n      popup.addEventListener(animationEndEvent, swalOpenAnimationFinished);\n    } else {\n      container.style.overflowY = 'auto';\n    }\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {boolean} scrollbarPadding\n   * @param {string} initialBodyOverflow\n   */\n  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {\n    iOSfix();\n    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {\n      fixScrollbar();\n    }\n\n    // sweetalert2/issues/1247\n    setTimeout(() => {\n      container.scrollTop = 0;\n    });\n  };\n\n  /**\n   * @param {HTMLElement} container\n   * @param {HTMLElement} popup\n   * @param {SweetAlertOptions} params\n   */\n  const addClasses = (container, popup, params) => {\n    addClass(container, params.showClass.backdrop);\n    // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059\n    popup.style.setProperty('opacity', '0', 'important');\n    show(popup, 'grid');\n    setTimeout(() => {\n      // Animate popup right after showing it\n      addClass(popup, params.showClass.popup);\n      // and remove the opacity workaround\n      popup.style.removeProperty('opacity');\n    }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062\n\n    addClass([document.documentElement, document.body], swalClasses.shown);\n    if (params.heightAuto && params.backdrop && !params.toast) {\n      addClass([document.documentElement, document.body], swalClasses['height-auto']);\n    }\n  };\n\n  var defaultInputValidators = {\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    email: (string, validationMessage) => {\n      return /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z0-9-]{2,24}$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');\n    },\n    /**\n     * @param {string} string\n     * @param {string} validationMessage\n     * @returns {Promise<void | string>}\n     */\n    url: (string, validationMessage) => {\n      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013\n      return /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-z]{2,63}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');\n    }\n  };\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function setDefaultInputValidators(params) {\n    // Use default `inputValidator` for supported input types if not provided\n    if (!params.inputValidator) {\n      Object.keys(defaultInputValidators).forEach(key => {\n        if (params.input === key) {\n          params.inputValidator = defaultInputValidators[key];\n        }\n      });\n    }\n  }\n\n  /**\n   * @param {SweetAlertOptions} params\n   */\n  function validateCustomTargetElement(params) {\n    // Determine if the custom target element is valid\n    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {\n      warn('Target parameter is not valid, defaulting to \"body\"');\n      params.target = 'body';\n    }\n  }\n\n  /**\n   * Set type, text and actions on popup\n   *\n   * @param {SweetAlertOptions} params\n   */\n  function setParameters(params) {\n    setDefaultInputValidators(params);\n\n    // showLoaderOnConfirm && preConfirm\n    if (params.showLoaderOnConfirm && !params.preConfirm) {\n      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\\n' + 'https://sweetalert2.github.io/#ajax-request');\n    }\n    validateCustomTargetElement(params);\n\n    // Replace newlines with <br> in title\n    if (typeof params.title === 'string') {\n      params.title = params.title.split('\\n').join('<br />');\n    }\n    init(params);\n  }\n\n  let currentInstance;\n  class SweetAlert {\n    constructor() {\n      // Prevent run in Node env\n      if (typeof window === 'undefined') {\n        return;\n      }\n      currentInstance = this;\n\n      // @ts-ignore\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const outerParams = Object.freeze(this.constructor.argsToParams(args));\n      Object.defineProperties(this, {\n        params: {\n          value: outerParams,\n          writable: false,\n          enumerable: true,\n          configurable: true\n        }\n      });\n\n      // @ts-ignore\n      const promise = currentInstance._main(currentInstance.params);\n      privateProps.promise.set(this, promise);\n    }\n    _main(userParams) {\n      let mixinParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      showWarningsForParams(Object.assign({}, mixinParams, userParams));\n      if (globalState.currentInstance) {\n        // @ts-ignore\n        globalState.currentInstance._destroy();\n        if (isModal()) {\n          unsetAriaHidden();\n        }\n      }\n      globalState.currentInstance = currentInstance;\n      const innerParams = prepareParams(userParams, mixinParams);\n      setParameters(innerParams);\n      Object.freeze(innerParams);\n\n      // clear the previous timer\n      if (globalState.timeout) {\n        globalState.timeout.stop();\n        delete globalState.timeout;\n      }\n\n      // clear the restore focus timeout\n      clearTimeout(globalState.restoreFocusTimeout);\n      const domCache = populateDomCache(currentInstance);\n      render(currentInstance, innerParams);\n      privateProps.innerParams.set(currentInstance, innerParams);\n      return swalPromise(currentInstance, domCache, innerParams);\n    }\n\n    // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n    then(onFulfilled) {\n      const promise = privateProps.promise.get(this);\n      return promise.then(onFulfilled);\n    }\n    finally(onFinally) {\n      const promise = privateProps.promise.get(this);\n      return promise.finally(onFinally);\n    }\n  }\n\n  /**\n   * @param {SweetAlert2} instance\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {Promise}\n   */\n  const swalPromise = (instance, domCache, innerParams) => {\n    return new Promise((resolve, reject) => {\n      // functions to handle all closings/dismissals\n      /**\n       * @param {DismissReason} dismiss\n       */\n      const dismissWith = dismiss => {\n        // @ts-ignore\n        instance.close({\n          isDismissed: true,\n          dismiss\n        });\n      };\n      privateMethods.swalPromiseResolve.set(instance, resolve);\n      privateMethods.swalPromiseReject.set(instance, reject);\n      domCache.confirmButton.onclick = () => {\n        handleConfirmButtonClick(instance);\n      };\n      domCache.denyButton.onclick = () => {\n        handleDenyButtonClick(instance);\n      };\n      domCache.cancelButton.onclick = () => {\n        handleCancelButtonClick(instance, dismissWith);\n      };\n      domCache.closeButton.onclick = () => {\n        // @ts-ignore\n        dismissWith(DismissReason.close);\n      };\n      handlePopupClick(instance, domCache, dismissWith);\n      addKeydownHandler(instance, globalState, innerParams, dismissWith);\n      handleInputOptionsAndValue(instance, innerParams);\n      openPopup(innerParams);\n      setupTimer(globalState, innerParams, dismissWith);\n      initFocus(domCache, innerParams);\n\n      // Scroll container to top on open (#1247, #1946)\n      setTimeout(() => {\n        domCache.container.scrollTop = 0;\n      });\n    });\n  };\n\n  /**\n   * @param {SweetAlertOptions} userParams\n   * @param {SweetAlertOptions} mixinParams\n   * @returns {SweetAlertOptions}\n   */\n  const prepareParams = (userParams, mixinParams) => {\n    const templateParams = getTemplateParams(userParams);\n    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131\n    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);\n    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);\n    return params;\n  };\n\n  /**\n   * @param {SweetAlert2} instance\n   * @returns {DomCache}\n   */\n  const populateDomCache = instance => {\n    const domCache = {\n      popup: getPopup(),\n      container: getContainer(),\n      actions: getActions(),\n      confirmButton: getConfirmButton(),\n      denyButton: getDenyButton(),\n      cancelButton: getCancelButton(),\n      loader: getLoader(),\n      closeButton: getCloseButton(),\n      validationMessage: getValidationMessage(),\n      progressSteps: getProgressSteps()\n    };\n    privateProps.domCache.set(instance, domCache);\n    return domCache;\n  };\n\n  /**\n   * @param {GlobalState} globalState\n   * @param {SweetAlertOptions} innerParams\n   * @param {Function} dismissWith\n   */\n  const setupTimer = (globalState, innerParams, dismissWith) => {\n    const timerProgressBar = getTimerProgressBar();\n    hide(timerProgressBar);\n    if (innerParams.timer) {\n      globalState.timeout = new Timer(() => {\n        dismissWith('timer');\n        delete globalState.timeout;\n      }, innerParams.timer);\n      if (innerParams.timerProgressBar) {\n        show(timerProgressBar);\n        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');\n        setTimeout(() => {\n          if (globalState.timeout && globalState.timeout.running) {\n            // timer can be already stopped or unset at this point\n            animateTimerProgressBar(innerParams.timer);\n          }\n        });\n      }\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   */\n  const initFocus = (domCache, innerParams) => {\n    if (innerParams.toast) {\n      return;\n    }\n    if (!callIfFunction(innerParams.allowEnterKey)) {\n      blurActiveElement();\n      return;\n    }\n    if (!focusButton(domCache, innerParams)) {\n      setFocus(innerParams, -1, 1);\n    }\n  };\n\n  /**\n   * @param {DomCache} domCache\n   * @param {SweetAlertOptions} innerParams\n   * @returns {boolean}\n   */\n  const focusButton = (domCache, innerParams) => {\n    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {\n      domCache.denyButton.focus();\n      return true;\n    }\n    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {\n      domCache.cancelButton.focus();\n      return true;\n    }\n    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {\n      domCache.confirmButton.focus();\n      return true;\n    }\n    return false;\n  };\n  const blurActiveElement = () => {\n    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {\n      document.activeElement.blur();\n    }\n  };\n\n  // Dear russian users visiting russian sites. Let's have fun.\n  if (typeof window !== 'undefined' && /^ru\\b/.test(navigator.language) && location.host.match(/\\.(ru|su|xn--p1ai)$/)) {\n    const now = new Date();\n    const initiationDate = localStorage.getItem('swal-initiation');\n    if (!initiationDate) {\n      localStorage.setItem('swal-initiation', `${now}`);\n    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {\n      setTimeout(() => {\n        document.body.style.pointerEvents = 'none';\n        const ukrainianAnthem = document.createElement('audio');\n        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';\n        ukrainianAnthem.loop = true;\n        document.body.appendChild(ukrainianAnthem);\n        setTimeout(() => {\n          ukrainianAnthem.play().catch(() => {\n            // ignore\n          });\n        }, 2500);\n      }, 500);\n    }\n  }\n\n  // Assign instance methods from src/instanceMethods/*.js to prototype\n  Object.assign(SweetAlert.prototype, instanceMethods);\n\n  // Assign static methods from src/staticMethods/*.js to constructor\n  Object.assign(SweetAlert, staticMethods);\n\n  // Proxy to instance methods to constructor, for now, for backwards compatibility\n  Object.keys(instanceMethods).forEach(key => {\n    /**\n     * @param {...any} args\n     * @returns {any}\n     */\n    SweetAlert[key] = function () {\n      if (currentInstance) {\n        return currentInstance[key](...arguments);\n      }\n    };\n  });\n  SweetAlert.DismissReason = DismissReason;\n  SweetAlert.version = '11.6.13';\n\n  const Swal = SweetAlert;\n  // @ts-ignore\n  Swal.default = Swal;\n\n  return Swal;\n\n}));\nif (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}\n\"undefined\"!=typeof document&&function(e,t){var n=e.createElement(\"style\");if(e.getElementsByTagName(\"head\")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,\".swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:\\\"top-start     top            top-end\\\" \\\"center-start  center         center-end\\\" \\\"bottom-start  bottom-center  bottom-end\\\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:rgba(0,0,0,0) !important}.swal2-container.swal2-top-start,.swal2-container.swal2-center-start,.swal2-container.swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}.swal2-container.swal2-top,.swal2-container.swal2-center,.swal2-container.swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}.swal2-container.swal2-top-end,.swal2-container.swal2-center-end,.swal2-container.swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-start>.swal2-popup,.swal2-container.swal2-center-left>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-start>.swal2-popup,.swal2-container.swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-row>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none !important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:none}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:none}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:rgba(0,0,0,0);color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:rgba(0,0,0,0);color:#f27474}.swal2-close:focus{outline:none;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-input,.swal2-file,.swal2-textarea,.swal2-select,.swal2-radio,.swal2-checkbox{margin:1em 2em 3px}.swal2-input,.swal2-file,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:rgba(0,0,0,0);box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-input.swal2-inputerror,.swal2-file.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}.swal2-input:focus,.swal2-file:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:none;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-input::placeholder,.swal2-file::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:rgba(0,0,0,0);font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:rgba(0,0,0,0);color:inherit;font-size:1.125em}.swal2-radio,.swal2-checkbox{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-radio label,.swal2-checkbox label{margin:0 .6em;font-size:1.125em}.swal2-radio input,.swal2-checkbox input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:\\\"!\\\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:0.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:swal2-show .3s}.swal2-hide{animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static !important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}\");"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}