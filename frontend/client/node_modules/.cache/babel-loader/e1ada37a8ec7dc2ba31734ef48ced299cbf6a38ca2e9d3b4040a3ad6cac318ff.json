{"ast":null,"code":"var _jsxFileName = \"/Users/indalecio/Desktop/Arqui_de_soft2_FINAL/UCC-as2-final/frontend/client/src/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from './pages/login/auth';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  adminOnly = false\n}) => {\n  _s();\n  const {\n    auth,\n    login,\n    logout\n  } = useContext(AuthContext);\n\n  // Función para verificar si el access token está vencido\n  const isTokenExpired = accessToken => {\n    const {\n      exp\n    } = jwtDecode(accessToken);\n    return Date.now() >= exp * 1000;\n  };\n\n  // Función para renovar el access token utilizando el refresh token\n  const refreshToken = async () => {\n    try {\n      const response = await axios.post('http://localhost/user-res-api/refresh', {\n        refreshToken: auth.refreshToken\n      });\n      const {\n        accessToken,\n        refreshToken,\n        userType\n      } = response.data;\n      console.log(\"data refresh token\", response.data);\n      login(accessToken, refreshToken, userType);\n    } catch (error) {\n      console.error('Error al refrescar el token:', error);\n      logout();\n    }\n  };\n  useEffect(() => {\n    // Verificar si el access token está vencido y renovarlo si es necesario\n    if (auth.accessToken && isTokenExpired(auth.accessToken)) {\n      refreshToken();\n    }\n  }, [auth.accessToken]);\n  if (!auth.accessToken) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: adminOnly ? '/login-admin' : '/login-cliente'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  }\n  if (adminOnly && auth.userType !== true) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"U0LNxjhClKCz4IMj5FiDhN8QFf8=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","useEffect","Navigate","AuthContext","axios","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","adminOnly","_s","auth","login","logout","isTokenExpired","accessToken","exp","Date","now","refreshToken","response","post","userType","data","console","log","error","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/indalecio/Desktop/Arqui_de_soft2_FINAL/UCC-as2-final/frontend/client/src/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from './pages/login/auth';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode';\n\nconst ProtectedRoute = ({ children, adminOnly = false }) => {\n    const { auth, login, logout } = useContext(AuthContext);\n\n    // Función para verificar si el access token está vencido\n    const isTokenExpired = (accessToken) => {\n        const { exp } = jwtDecode(accessToken);\n        return Date.now() >= exp * 1000;\n    };\n\n    // Función para renovar el access token utilizando el refresh token\n    const refreshToken = async () => {\n        try {\n            const response = await axios.post('http://localhost/user-res-api/refresh', {\n                refreshToken: auth.refreshToken\n            });\n            const { accessToken, refreshToken, userType } = response.data;\n            console.log(\"data refresh token\", response.data)\n            login(accessToken, refreshToken, userType);\n        } catch (error) {\n            console.error('Error al refrescar el token:', error);\n            logout();\n        }\n    };\n\n    useEffect(() => {\n        // Verificar si el access token está vencido y renovarlo si es necesario\n        if (auth.accessToken && isTokenExpired(auth.accessToken)) {\n            refreshToken();\n        }\n    }, [auth.accessToken]);\n\n    if (!auth.accessToken) {\n        return <Navigate to={adminOnly ? '/login-admin' : '/login-cliente'} />;\n    }\n\n    if (adminOnly && auth.userType !== true) {\n        return <Navigate to=\"/\" />;\n    }\n\n    return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGd,UAAU,CAACG,WAAW,CAAC;;EAEvD;EACA,MAAMY,cAAc,GAAIC,WAAW,IAAK;IACpC,MAAM;MAAEC;IAAI,CAAC,GAAGZ,SAAS,CAACW,WAAW,CAAC;IACtC,OAAOE,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIF,GAAG,GAAG,IAAI;EACnC,CAAC;;EAED;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,uCAAuC,EAAE;QACvEF,YAAY,EAAER,IAAI,CAACQ;MACvB,CAAC,CAAC;MACF,MAAM;QAAEJ,WAAW;QAAEI,YAAY;QAAEG;MAAS,CAAC,GAAGF,QAAQ,CAACG,IAAI;MAC7DC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEL,QAAQ,CAACG,IAAI,CAAC;MAChDX,KAAK,CAACG,WAAW,EAAEI,YAAY,EAAEG,QAAQ,CAAC;IAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDb,MAAM,CAAC,CAAC;IACZ;EACJ,CAAC;EAEDb,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,IAAI,CAACI,WAAW,IAAID,cAAc,CAACH,IAAI,CAACI,WAAW,CAAC,EAAE;MACtDI,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC,EAAE,CAACR,IAAI,CAACI,WAAW,CAAC,CAAC;EAEtB,IAAI,CAACJ,IAAI,CAACI,WAAW,EAAE;IACnB,oBAAOT,OAAA,CAACL,QAAQ;MAAC0B,EAAE,EAAElB,SAAS,GAAG,cAAc,GAAG;IAAiB;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;EAEA,IAAItB,SAAS,IAAIE,IAAI,CAACW,QAAQ,KAAK,IAAI,EAAE;IACrC,oBAAOhB,OAAA,CAACL,QAAQ;MAAC0B,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;EAEA,OAAOvB,QAAQ;AACnB,CAAC;AAACE,EAAA,CAxCIH,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AA0CpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}