{"ast":null,"code":"var _jsxFileName = \"/Users/indalecio/Desktop/Arqui_de_soft2_FINAL/UCC-as2-final/frontend/client/src/pages/login/login_cliente.jsx\",\n  _s = $RefreshSig$();\n// login_cliente.js\nimport React, { useContext, useState } from 'react';\nimport { AuthContext } from './auth';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport { ToastContainer, toast } from 'react-toastify';\nimport '../estilo/login_cliente.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClienteLogin = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const handleLoginCliente = () => {\n    fetch('http://localhost/user-res-api/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      if (response.status === 400 || response.status === 401 || response.status === 403) {\n        throw new Error('Invalid credentials');\n      }\n      return response.json();\n    }).then(data => {\n      if (data.type === false) {\n        login(data.accessToken, data.refreshToken, data.type);\n        navigate('/');\n      } else {\n        alert(\"Usted es un administrador. Para iniciar sesión como administrador, diríjase al área de admin.\");\n      }\n    }).catch(error => {\n      toast.error('Error al iniciar sesión: ' + error.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodylogclient\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contLogClie1\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contLogClien2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: \"Bienvenido Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Nombre de usuario\",\n              id: \"username\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Contrase\\xF1a\",\n              id: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"buttonClient\",\n                onClick: handleLoginCliente,\n                children: \"Iniciar Sesi\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/register\",\n                className: \"buttonClient\",\n                children: \"Registrarse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ClienteLogin, \"luCaMUmVKE0J4aPuVTyg3eWmrwo=\", false, function () {\n  return [useNavigate];\n});\n_c = ClienteLogin;\nexport default ClienteLogin;\nvar _c;\n$RefreshReg$(_c, \"ClienteLogin\");","map":{"version":3,"names":["React","useContext","useState","AuthContext","Link","useNavigate","Cookies","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ClienteLogin","_s","username","setUsername","password","setPassword","login","navigate","handleLoginCliente","fetch","method","headers","body","JSON","stringify","then","response","status","Error","json","data","type","accessToken","refreshToken","alert","catch","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","id","value","onChange","e","target","onClick","to","_c","$RefreshReg$"],"sources":["/Users/indalecio/Desktop/Arqui_de_soft2_FINAL/UCC-as2-final/frontend/client/src/pages/login/login_cliente.jsx"],"sourcesContent":["// login_cliente.js\r\nimport React, { useContext, useState } from 'react';\r\nimport { AuthContext } from './auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport Cookies from 'universal-cookie';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport '../estilo/login_cliente.css';\r\n\r\nconst ClienteLogin = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { login } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n\r\n    const handleLoginCliente = () => {\r\n        fetch('http://localhost/user-res-api/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, password }),\r\n        })\r\n        .then(response => {\r\n            if (response.status === 400 || response.status === 401 || response.status === 403) {\r\n                throw new Error('Invalid credentials');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            if (data.type === false) {\r\n                login(data.accessToken, data.refreshToken, data.type);\r\n                navigate('/');\r\n            } else {\r\n                alert(\"Usted es un administrador. Para iniciar sesión como administrador, diríjase al área de admin.\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            toast.error('Error al iniciar sesión: ' + error.message);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bodylogclient\">\r\n                <div className=\"contLogClie1\">\r\n                    <div className=\"contLogClien2\">\r\n                        <h1 className=\"title\">Bienvenido Cliente</h1>\r\n                        <div className=\"form-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Nombre de usuario\"\r\n                                id=\"username\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Contraseña\"\r\n                                id=\"password\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                            <div className=\"button-container\">\r\n                                <button className=\"buttonClient\" onClick={handleLoginCliente}>\r\n                                    Iniciar Sesión\r\n                                </button>\r\n                                <Link to=\"/register\" className=\"buttonClient\">\r\n                                    Registrarse\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ToastContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClienteLogin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}